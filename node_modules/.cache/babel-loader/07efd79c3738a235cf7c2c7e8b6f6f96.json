{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js\";\nimport { React, Component, Layout, connect } from \"../../global\";\nimport { Card, Row, Col, Steps, Modal } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nconst {\n  Footer,\n  Content\n} = Layout;\nconst {\n  Step\n} = Steps;\nconst {\n  Meta\n} = Card;\nconst steps = [{\n  title: 'First',\n  content: 'First'\n}, {\n  title: 'Second',\n  content: 'Second-content'\n}, {\n  title: 'Last',\n  content: 'Last-content'\n}];\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openIngredientCard = data => {\n      console.log('dataaaaaaaaaa', data);\n      this.setState({\n        isVisibleModal: true\n      });\n    };\n\n    this.state = {\n      isVisibleModal: false\n    };\n  }\n\n  render() {\n    if (this.props.ingredient) {\n      const {\n        current,\n        setCurrent,\n        isVisibleModal\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(PublicHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Content, {\n        width: 1300,\n        style: {\n          height: \"830px\",\n          textAlign: \"center\",\n          backgroundColor: \"#eeeff1\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Place the ingredients on the pizza.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, this.props.ingredient.map((data, index) => {\n        return /*#__PURE__*/React.createElement(Col, {\n          span: 6,\n          key: index,\n          type: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          title: data.name,\n          hoverable: true,\n          onClick: () => this.openIngredientCard(data),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 27\n          }\n        }, \"Price : \", data.price), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 27\n          }\n        }, \"Time to make pizza : \", data.time)));\n      })))), /*#__PURE__*/React.createElement(Modal, {\n        title: \"modall\",\n        visible: isVisibleModal,\n        onCancel: resetForm,\n        width: 1300,\n        footer: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Footer, {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, \"Design \\xA92020 Created by Nikola Mrkic\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      });\n    }\n  }\n\n} // Map State To Props (Redux Store Passes State To Component)\n\n\nconst mapStateToProps = state => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success; // Redux Store --> Component\n\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data\n    };\n  }\n}; // anything returned from this function will end up as props\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js"],"names":["React","Component","Layout","connect","Card","Row","Col","Steps","Modal","PublicHeader","INGREDIENT","Footer","Content","Step","Meta","steps","title","content","HomePage","constructor","props","openIngredientCard","data","console","log","setState","isVisibleModal","state","render","ingredient","current","setCurrent","height","textAlign","backgroundColor","map","index","name","price","time","resetForm","mapStateToProps","fethcSuccess","success","mapDispatchToProps","dispatch","getIngredient","request"],"mappings":"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","sourcesContent":["import { React, Component, Layout, connect } from \"../../global\";\nimport { Card, Row, Col, Steps, Modal } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nconst { Footer, Content } = Layout;\nconst { Step } = Steps;\nconst { Meta } = Card;\nconst steps = [\n  {\n    title: 'First',\n    content: 'First',\n  },\n  {\n    title: 'Second',\n    content: 'Second-content',\n  },\n  {\n    title: 'Last',\n    content: 'Last-content',\n  },\n];\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisibleModal: false\n    };\n\n  }\n\n\n  openIngredientCard = (data) => {\n    console.log('dataaaaaaaaaa', data);\n    this.setState({\n      isVisibleModal: true\n    })\n  };\n\n\n  render() {\n    if (this.props.ingredient) {\n      const { current, setCurrent, isVisibleModal } = this.state;\n      return (\n        <div >\n          <Layout>\n            <PublicHeader />\n            <Content\n              width={1300}\n              style={{\n                height: \"830px\",\n                textAlign: \"center\",\n                backgroundColor: \"#eeeff1\",\n              }}\n            >\n              <Card title=\"Place the ingredients on the pizza.\"  >\n                <Row>\n                  {this.props.ingredient.map((data, index) => {\n                    return (\n                      <Col span={6} key={index} type=\"primary\" >\n                        <Card title={data.name} hoverable={true} onClick={() => this.openIngredientCard(data)} >\n                          <p>Price : {data.price}</p>\n                          <p>Time to make pizza : {data.time}</p>\n                        </Card>\n                      </Col>\n                    );\n                  })}\n                </Row>\n              </Card>\n\n            </Content>\n\n            <Modal\n              title=\"modall\"\n              visible={isVisibleModal}\n              onCancel={resetForm}\n              width={1300}\n              footer={false}\n            >\n              {/* <UserForm initialValues={useUser} editableForm={isDataForEdit} /> */}\n            </Modal>\n            <Footer style={{ textAlign: \"center\" }}>\n              Design ©2020 Created by Nikola Mrkic\n            </Footer>\n          </Layout>\n        </div>\n      );\n    } else {\n      return (<div>\n      </div>)\n    }\n\n  }\n}\n\n// Map State To Props (Redux Store Passes State To Component)\nconst mapStateToProps = (state) => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success;\n  // Redux Store --> Component\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data,\n    };\n  }\n};\n\n// anything returned from this function will end up as props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);"]},"metadata":{},"sourceType":"module"}