{"ast":null,"code":"import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { orderAction } from \"../../actions/public/ordersAction\"; // import { ORDER } from \"../../actions/public/ordersAction/ordersActionTypes\";\n\nfunction* handleGetOrders() {\n  console.log(\"DOVLACIMMMMMMMMMMMMMMMMMMMMMM\");\n\n  try {\n    const {\n      data\n    } = yield call(DataUtils.get, `/public/ingredients`);\n    console.log('data iz sage', data);\n    console.log(\"data from saga\", data);\n    yield put(orderAction.success({\n      data\n    }));\n  } catch (e) {\n    yield put(orderAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nexport function* watchAllOrdersSagas() {\n  yield all([takeLatest(ORDER.GET, handleGetOrders)]);\n}\nexport default watchAllOrdersSagas;","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/redux/sagas/public/orderSaga.js"],"names":["put","call","takeLatest","all","DataUtils","orderAction","handleGetOrders","console","log","data","get","success","e","failure","error","watchAllOrdersSagas","ORDER","GET"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,WAAT,QAA4B,mCAA5B,C,CACA;;AAEA,UAAUC,eAAV,GAA4B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACG,SAAS,CAACM,GAAX,EAAiB,qBAAjB,CAA3B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,IAA5B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAA9B;AACA,UAAMT,GAAG,CAACK,WAAW,CAACM,OAAZ,CAAoB;AAAEF,MAAAA;AAAF,KAApB,CAAD,CAAT;AACH,GALD,CAKE,OAAOG,CAAP,EAAU;AACR,UAAMZ,GAAG,CAACK,WAAW,CAACQ,OAAZ,CAAoB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAApB,CAAD,CAAT;AACH;AACJ;;AAED,OAAO,UAAUG,mBAAV,GAAgC;AACnC,QAAMZ,GAAG,CACL,CAACD,UAAU,CAACc,KAAK,CAACC,GAAP,EAAYX,eAAZ,CAAX,CADK,CAAT;AAGH;AAED,eAAeS,mBAAf","sourcesContent":["import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { orderAction } from \"../../actions/public/ordersAction\";\n// import { ORDER } from \"../../actions/public/ordersAction/ordersActionTypes\";\n\nfunction* handleGetOrders() {\n    console.log(\"DOVLACIMMMMMMMMMMMMMMMMMMMMMM\");\n    try {\n        const { data } = yield call(DataUtils.get, `/public/ingredients`);\n        console.log('data iz sage', data);\n        console.log(\"data from saga\", data);\n        yield put(orderAction.success({ data }));\n    } catch (e) {\n        yield put(orderAction.failure({ error: { ...e } }));\n    }\n}\n\nexport function* watchAllOrdersSagas() {\n    yield all(\n        [takeLatest(ORDER.GET, handleGetOrders)],\n    );\n}\n\nexport default watchAllOrdersSagas;\n"]},"metadata":{},"sourceType":"module"}