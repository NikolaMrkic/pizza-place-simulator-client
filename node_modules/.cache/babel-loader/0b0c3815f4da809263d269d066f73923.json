{"ast":null,"code":"import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { userAction } from \"../../actions/public/userAction\"; // import { orderAction } from \"../../actions/public/ordersAction\";\n\nimport { USER } from \"../../actions/public/userAction/userActionTypes\";\n\nfunction* singIn(action) {\n  console.log(\"AKCIJAAAAAAAA\", action);\n  const user = action.payload;\n  console.log(\"USER IZ SAGE \", user);\n\n  try {\n    const response = yield call(DataUtils.post, `/sign-up`, user);\n    console.log(\"response from saga handlePost\", response);\n    console.log(\"response.data from saga handlePost\", response.data);\n    const userResponse = response.data;\n    console.log(\"DOVUKAOOOOOOO responseee\", userResponse);\n    yield put(userAction.success({\n      userResponse\n    }));\n  } catch (e) {\n    yield put(userAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* logIn(action) {\n  console.log(\"AKCIJAAAAAAAA\", action);\n  const user = action.payload;\n  console.log(\"USER IZ SAGE \", user);\n\n  try {\n    const response = yield call(DataUtils.post, `/login`, user);\n    console.log(\"response from saga handlePost\", response);\n    console.log(\"response.data from saga handlePost\", response.data);\n    const userResponse = response.data;\n    console.log(\"DOVUKAOOOOOOO responseee\", userResponse);\n    yield put(userAction.success({\n      userResponse\n    }));\n  } catch (e) {\n    yield put(userAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nexport function* watchAllUserAdminSagas() {\n  yield all([takeLatest(USER.SINGIN, singIn), takeLatest(USER.LOGIN, logIn)]);\n}\nexport default watchAllUserAdminSagas;","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/redux/sagas/public/userSagas.js"],"names":["put","call","takeLatest","all","DataUtils","userAction","USER","singIn","action","console","log","user","payload","response","post","data","userResponse","success","e","failure","error","logIn","watchAllUserAdminSagas","SINGIN","LOGIN"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,iCAA3B,C,CACA;;AACA,SAASC,IAAT,QAAqB,iDAArB;;AAEA,UAAUC,MAAV,CAAiBC,MAAjB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,MAA7B;AACA,QAAMG,IAAI,GAAGH,MAAM,CAACI,OAApB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,IAA7B;;AAEA,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMZ,IAAI,CAACG,SAAS,CAACU,IAAX,EAAkB,UAAlB,EAA6BH,IAA7B,CAA3B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CG,QAA7C;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDG,QAAQ,CAACE,IAA3D;AACA,UAAMC,YAAY,GAAGH,QAAQ,CAACE,IAA9B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCM,YAAxC;AACA,UAAMhB,GAAG,CAACK,UAAU,CAACY,OAAX,CAAmB;AAAED,MAAAA;AAAF,KAAnB,CAAD,CAAT;AACD,GAPD,CAOE,OAAOE,CAAP,EAAU;AACV,UAAMlB,GAAG,CAACK,UAAU,CAACc,OAAX,CAAmB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAAnB,CAAD,CAAT;AACD;AACF;;AAED,UAAUG,KAAV,CAAgBb,MAAhB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,MAA7B;AACA,QAAMG,IAAI,GAAGH,MAAM,CAACI,OAApB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,IAA7B;;AAEA,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMZ,IAAI,CAACG,SAAS,CAACU,IAAX,EAAkB,QAAlB,EAA2BH,IAA3B,CAA3B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CG,QAA7C;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDG,QAAQ,CAACE,IAA3D;AACA,UAAMC,YAAY,GAAGH,QAAQ,CAACE,IAA9B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCM,YAAxC;AACA,UAAMhB,GAAG,CAACK,UAAU,CAACY,OAAX,CAAmB;AAAED,MAAAA;AAAF,KAAnB,CAAD,CAAT;AACD,GAPD,CAOE,OAAOE,CAAP,EAAU;AACV,UAAMlB,GAAG,CAACK,UAAU,CAACc,OAAX,CAAmB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAAnB,CAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUI,sBAAV,GAAmC;AACxC,QAAMnB,GAAG,CAAC,CACRD,UAAU,CAACI,IAAI,CAACiB,MAAN,EAAchB,MAAd,CADF,EAERL,UAAU,CAACI,IAAI,CAACkB,KAAN,EAAaH,KAAb,CAFF,CAAD,CAAT;AAKD;AAED,eAAeC,sBAAf","sourcesContent":["import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { userAction } from \"../../actions/public/userAction\";\n// import { orderAction } from \"../../actions/public/ordersAction\";\nimport { USER } from \"../../actions/public/userAction/userActionTypes\";\n\nfunction* singIn(action) {\n  console.log(\"AKCIJAAAAAAAA\", action);\n  const user = action.payload;\n  console.log(\"USER IZ SAGE \", user);\n\n  try {\n    const response = yield call(DataUtils.post, `/sign-up`, user);\n    console.log(\"response from saga handlePost\", response);\n    console.log(\"response.data from saga handlePost\", response.data);\n    const userResponse = response.data;\n    console.log(\"DOVUKAOOOOOOO responseee\", userResponse);\n    yield put(userAction.success({ userResponse }));\n  } catch (e) {\n    yield put(userAction.failure({ error: { ...e } }));\n  }\n}\n\nfunction* logIn(action) {\n  console.log(\"AKCIJAAAAAAAA\", action);\n  const user = action.payload;\n  console.log(\"USER IZ SAGE \", user);\n\n  try {\n    const response = yield call(DataUtils.post, `/login`, user);\n    console.log(\"response from saga handlePost\", response);\n    console.log(\"response.data from saga handlePost\", response.data);\n    const userResponse = response.data;\n    console.log(\"DOVUKAOOOOOOO responseee\", userResponse);\n    yield put(userAction.success({ userResponse }));\n  } catch (e) {\n    yield put(userAction.failure({ error: { ...e } }));\n  }\n}\n\nexport function* watchAllUserAdminSagas() {\n  yield all([\n    takeLatest(USER.SINGIN, singIn),\n    takeLatest(USER.LOGIN, logIn),\n\n  ]);\n}\n\nexport default watchAllUserAdminSagas;\n"]},"metadata":{},"sourceType":"module"}