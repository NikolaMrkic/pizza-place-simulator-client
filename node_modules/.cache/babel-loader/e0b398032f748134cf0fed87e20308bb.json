{"ast":null,"code":"import axios from \"axios\";\nconst clientID = \"service-account-1\";\nconst clientSecret = \"service-account-1-secret\";\nconst authString = clientID + \":\" + clientSecret;\nconst clientAuthentication = `Basic ${btoa(authString)}`; //const apiUrl = API_URL;\n\nconst api = axios.create({\n  //baseURL: apiUrl\n  baseURL: `http://127.0.0.1:3001/`\n});\n\nconst get = async function (url, options = {}) {\n  let result = [];\n  let error;\n  await api.get(url, options).then(res => result = res, err => error = err);\n\n  if (error !== undefined) {\n    throw error.response;\n  }\n\n  const dataAndStatusForGet = {\n    data: result.data,\n    status: result.status\n  };\n  return dataAndStatusForGet;\n};\n\nconst post = async function (url, data, options = {}) {\n  let result = [];\n  await api.post(url, data, options).then(res => result = res);\n  const dataAndStatusForPost = {\n    data: result.data,\n    status: result.status\n  };\n  console.log(\"iz data utilsa\", dataAndStatusForPost); // return result.data\n\n  return dataAndStatusForPost;\n};\n\nconst put = async function (url, data, options = {}) {\n  let result = [];\n  await api.put(url, data, options).then(res => result = res);\n  const dataAndStatusForUpdate = {\n    data: result.data,\n    status: result.status\n  }; // return result.data\n\n  return dataAndStatusForUpdate;\n};\n\nconst del = async function (url, options = {}) {\n  var result = [];\n  await api.delete(url, options).then(res => result = res);\n  const dataAndStatusForDelete = {\n    data: result.data,\n    status: result.status\n  };\n  return dataAndStatusForDelete; // return result.data\n};\n\nexport default {\n  get,\n  post,\n  put,\n  del,\n  clientAuthentication\n};","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/DataUtils.js"],"names":["axios","clientID","clientSecret","authString","clientAuthentication","btoa","api","create","baseURL","get","url","options","result","error","then","res","err","undefined","response","dataAndStatusForGet","data","status","post","dataAndStatusForPost","console","log","put","dataAndStatusForUpdate","del","delete","dataAndStatusForDelete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAG,mBAAjB;AACA,MAAMC,YAAY,GAAG,0BAArB;AACA,MAAMC,UAAU,GAAGF,QAAQ,GAAG,GAAX,GAAiBC,YAApC;AACA,MAAME,oBAAoB,GAAI,SAAQC,IAAI,CAACF,UAAD,CAAa,EAAvD,C,CACA;;AAEA,MAAMG,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAa;AACvB;AACAC,EAAAA,OAAO,EAAG;AAFa,CAAb,CAAZ;;AAKA,MAAMC,GAAG,GAAG,gBAAgBC,GAAhB,EAAqBC,OAAO,GAAG,EAA/B,EAAmC;AAC7C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAJ;AACA,QAAMP,GAAG,CAACG,GAAJ,CAAQC,GAAR,EAAaC,OAAb,EAAsBG,IAAtB,CACHC,GAAD,IAAUH,MAAM,GAAGG,GADf,EAEHC,GAAD,IAAUH,KAAK,GAAGG,GAFd,CAAN;;AAKA,MAAIH,KAAK,KAAKI,SAAd,EAAyB;AACvB,UAAMJ,KAAK,CAACK,QAAZ;AACD;;AACD,QAAMC,mBAAmB,GAAG;AAAEC,IAAAA,IAAI,EAAER,MAAM,CAACQ,IAAf;AAAqBC,IAAAA,MAAM,EAAET,MAAM,CAACS;AAApC,GAA5B;AACA,SAAOF,mBAAP;AACD,CAbD;;AAeA,MAAMG,IAAI,GAAG,gBAAgBZ,GAAhB,EAAqBU,IAArB,EAA2BT,OAAO,GAAG,EAArC,EAAyC;AACpD,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMN,GAAG,CAACgB,IAAJ,CAASZ,GAAT,EAAcU,IAAd,EAAoBT,OAApB,EAA6BG,IAA7B,CAAmCC,GAAD,IAAUH,MAAM,GAAGG,GAArD,CAAN;AACA,QAAMQ,oBAAoB,GAAG;AAAEH,IAAAA,IAAI,EAAER,MAAM,CAACQ,IAAf;AAAqBC,IAAAA,MAAM,EAAET,MAAM,CAACS;AAApC,GAA7B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,oBAA9B,EAJoD,CAMpD;;AACA,SAAOA,oBAAP;AACD,CARD;;AAUA,MAAMG,GAAG,GAAG,gBAAgBhB,GAAhB,EAAqBU,IAArB,EAA2BT,OAAO,GAAG,EAArC,EAAyC;AACnD,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMN,GAAG,CAACoB,GAAJ,CAAQhB,GAAR,EAAaU,IAAb,EAAmBT,OAAnB,EAA4BG,IAA5B,CAAkCC,GAAD,IAAUH,MAAM,GAAGG,GAApD,CAAN;AACA,QAAMY,sBAAsB,GAAG;AAAEP,IAAAA,IAAI,EAAER,MAAM,CAACQ,IAAf;AAAqBC,IAAAA,MAAM,EAAET,MAAM,CAACS;AAApC,GAA/B,CAHmD,CAInD;;AACA,SAAOM,sBAAP;AACD,CAND;;AAQA,MAAMC,GAAG,GAAG,gBAAgBlB,GAAhB,EAAqBC,OAAO,GAAG,EAA/B,EAAmC;AAC7C,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMN,GAAG,CAACuB,MAAJ,CAAWnB,GAAX,EAAgBC,OAAhB,EAAyBG,IAAzB,CAA+BC,GAAD,IAAUH,MAAM,GAAGG,GAAjD,CAAN;AACA,QAAMe,sBAAsB,GAAG;AAAEV,IAAAA,IAAI,EAAER,MAAM,CAACQ,IAAf;AAAqBC,IAAAA,MAAM,EAAET,MAAM,CAACS;AAApC,GAA/B;AAEA,SAAOS,sBAAP,CAL6C,CAM7C;AACD,CAPD;;AASA,eAAe;AACbrB,EAAAA,GADa;AAEba,EAAAA,IAFa;AAGbI,EAAAA,GAHa;AAIbE,EAAAA,GAJa;AAKbxB,EAAAA;AALa,CAAf","sourcesContent":["import axios from \"axios\";\nconst clientID = \"service-account-1\";\nconst clientSecret = \"service-account-1-secret\";\nconst authString = clientID + \":\" + clientSecret;\nconst clientAuthentication = `Basic ${btoa(authString)}`;\n//const apiUrl = API_URL;\n\nconst api = axios.create({\n  //baseURL: apiUrl\n  baseURL: `http://127.0.0.1:3001/`,\n});\n\nconst get = async function (url, options = {}) {\n  let result = [];\n  let error;\n  await api.get(url, options).then(\n    (res) => (result = res),\n    (err) => (error = err)\n  );\n\n  if (error !== undefined) {\n    throw error.response;\n  }\n  const dataAndStatusForGet = { data: result.data, status: result.status };\n  return dataAndStatusForGet;\n};\n\nconst post = async function (url, data, options = {}) {\n  let result = [];\n  await api.post(url, data, options).then((res) => (result = res));\n  const dataAndStatusForPost = { data: result.data, status: result.status };\n  console.log(\"iz data utilsa\", dataAndStatusForPost);\n\n  // return result.data\n  return dataAndStatusForPost;\n};\n\nconst put = async function (url, data, options = {}) {\n  let result = [];\n  await api.put(url, data, options).then((res) => (result = res));\n  const dataAndStatusForUpdate = { data: result.data, status: result.status };\n  // return result.data\n  return dataAndStatusForUpdate;\n};\n\nconst del = async function (url, options = {}) {\n  var result = [];\n  await api.delete(url, options).then((res) => (result = res));\n  const dataAndStatusForDelete = { data: result.data, status: result.status };\n\n  return dataAndStatusForDelete;\n  // return result.data\n};\n\nexport default {\n  get,\n  post,\n  put,\n  del,\n  clientAuthentication,\n};\n"]},"metadata":{},"sourceType":"module"}