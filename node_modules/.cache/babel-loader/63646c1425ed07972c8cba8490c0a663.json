{"ast":null,"code":"import { ORDER } from \"../../actions/public/ordersAction/ordersActionTypes\";\nconst initialState = {\n  data: [],\n  orders: {\n    data: []\n  },\n  fetching: false,\n  success: false,\n  error: null\n};\nexport default function orderReducer(state = initialState, action) {\n  switch (action.type) {\n    case ORDER.RECEIVE:\n      return { ...state,\n        // data: [...state.orders, action.payload.order],\n        success: true,\n        errorMessage: null\n      };\n\n    case ORDER.GET:\n      return { ...state\n      };\n\n    case ORDER.SUCCESS:\n      return { ...state,\n        data: action.payload.data.orders,\n        fetching: true,\n        success: true,\n        error: null\n      };\n\n    case ORDER.FAILURE:\n      break;\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/redux/reducers/public/orderReducer.js"],"names":["ORDER","initialState","data","orders","fetching","success","error","orderReducer","state","action","type","RECEIVE","errorMessage","GET","SUCCESS","payload","FAILURE"],"mappings":"AAAA,SAASA,KAAT,QAAsB,qDAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,MAAM,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR,GAFS;AAGjBE,EAAAA,QAAQ,EAAE,KAHO;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGP,YAA9B,EAA4CQ,MAA5C,EAAoD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,OAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEH;AACAH,QAAAA,OAAO,EAAE,IAHN;AAIHO,QAAAA,YAAY,EAAE;AAJX,OAAP;;AAMJ,SAAKZ,KAAK,CAACa,GAAX;AACI,aAAO,EACH,GAAGL;AADA,OAAP;;AAGJ,SAAKR,KAAK,CAACc,OAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHN,QAAAA,IAAI,EAAEO,MAAM,CAACM,OAAP,CAAeb,IAAf,CAAoBC,MAFvB;AAGHC,QAAAA,QAAQ,EAAE,IAHP;AAIHC,QAAAA,OAAO,EAAE,IAJN;AAKHC,QAAAA,KAAK,EAAE;AALJ,OAAP;;AAOJ,SAAKN,KAAK,CAACgB,OAAX;AACI;;AACJ;AACI,aAAO,EACH,GAAGR;AADA,OAAP;AAvBR;AA2BH","sourcesContent":["import { ORDER } from \"../../actions/public/ordersAction/ordersActionTypes\";\n\nconst initialState = {\n    data: [],\n    orders: { data: [] },\n    fetching: false,\n    success: false,\n    error: null,\n};\n\nexport default function orderReducer(state = initialState, action) {\n    switch (action.type) {\n        case ORDER.RECEIVE:\n            return {\n                ...state,\n                // data: [...state.orders, action.payload.order],\n                success: true,\n                errorMessage: null,\n            };\n        case ORDER.GET:\n            return {\n                ...state,\n            };\n        case ORDER.SUCCESS:\n            return {\n                ...state,\n                data: action.payload.data.orders,\n                fetching: true,\n                success: true,\n                error: null,\n            };\n        case ORDER.FAILURE:\n            break;\n        default:\n            return {\n                ...state,\n            };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}