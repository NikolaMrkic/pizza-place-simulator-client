{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/components/public/order/form/OrderForm.js\";\nimport { React, Field, reduxForm, useDispatch, Button // useHistory,\n} from \"../../../../global\";\nimport { renderInput } from \"../form-component/index\";\n\nlet OrderForm = props => {\n  const dispatch = useDispatch(); // let history = useHistory();\n\n  console.log(\"props sa ordera\", props);\n\n  const onSubmitForm = values => {\n    const order = { ...props.initalValues,\n      ...values\n    };\n    console.log(\"props.initalValues\", props.initalValues);\n    console.log(\"values\", values);\n    console.log(\"order sa forme\", order);\n    dispatch(USER_ADMIN.save(values)); // props.clearFields()\n  };\n\n  const {\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmitForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    label: \"First Name\",\n    name: \"firstName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter first name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Address\",\n    name: \"address\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Phone\",\n    name: \"phone\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Order\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => {\n      props.closeIngredientCard();\n      props.reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Close Order\")));\n}; // redux-form\n\n\nOrderForm = reduxForm({\n  form: \"OrderForm\"\n})(OrderForm); // Important: connect only after calling reduxForm!!!\n\nexport default OrderForm;","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/components/public/order/form/OrderForm.js"],"names":["React","Field","reduxForm","useDispatch","Button","renderInput","OrderForm","props","dispatch","console","log","onSubmitForm","values","order","initalValues","USER_ADMIN","save","handleSubmit","textAlign","closeIngredientCard","reset","form"],"mappings":"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","sourcesContent":["import {\n    React,\n    Field,\n    reduxForm,\n    useDispatch,\n    Button,\n    // useHistory,\n} from \"../../../../global\";\nimport { renderInput } from \"../form-component/index\";\n\nlet OrderForm = (props) => {\n    const dispatch = useDispatch();\n    // let history = useHistory();\n    console.log(\"props sa ordera\", props);\n\n    const onSubmitForm = (values) => {\n        const order = { ...props.initalValues, ...values }\n        console.log(\"props.initalValues\", props.initalValues);\n        console.log(\"values\", values);\n\n        console.log(\"order sa forme\", order);\n        dispatch(USER_ADMIN.save(values));\n        // props.clearFields()\n    };\n\n\n    const { handleSubmit } = props;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmitForm)}>\n            <div>\n                <div>\n                    <Field\n                        label=\"First Name\"\n                        name=\"firstName\"\n                        component={renderInput}\n                        type=\"text\"\n                        placeholder=\"Enter first name\"\n                    />\n                    <Field\n                        label=\"Last Name\"\n                        name=\"lastName\"\n                        component={renderInput}\n                        type=\"text\"\n                        placeholder=\"Enter last name\"\n                    />\n                    <Field\n                        label=\"Address\"\n                        name=\"address\"\n                        component={renderInput}\n                        type=\"text\"\n                        placeholder=\"Enter address\"\n                    />\n                    <Field\n                        label=\"Phone\"\n                        name=\"phone\"\n                        component={renderInput}\n                        type=\"text\"\n                        placeholder=\"Enter phone\"\n                    />\n                </div>\n            </div>\n            <div style={{ textAlign: \"center\" }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Order\n             </Button>\n                <Button type=\"button\" onClick={() => {\n                    props.closeIngredientCard()\n                    props.reset()\n                }\n                }>\n\n                    Close Order\n                 </Button>\n            </div>\n        </form>\n    );\n};\n\n// redux-form\nOrderForm = reduxForm({\n    form: \"OrderForm\",\n})(OrderForm);\n\n// Important: connect only after calling reduxForm!!!\nexport default OrderForm;"]},"metadata":{},"sourceType":"module"}