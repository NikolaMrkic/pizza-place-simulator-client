{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js\";\nimport { React, Component, Layout, connect } from \"../../global\";\nimport { Space, Card } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nconst {\n  Footer,\n  Content\n} = Layout;\n\nclass HomePage extends Component {\n  render() {\n    console.log('props', this.props.ingredient);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PublicHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Content, {\n      width: 1300,\n      style: {\n        height: \"840px\",\n        textAlign: \"center\",\n        backgroundColor: \"#eeeff1\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Design \\xA92020 Created by Nikola Mrkic\")));\n  }\n\n} // Map State To Props (Redux Store Passes State To Component)\n\n\nconst mapStateToProps = state => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success; // Redux Store --> Component\n\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data\n    };\n  }\n}; // anything returned from this function will end up as props\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js"],"names":["React","Component","Layout","connect","Space","Card","PublicHeader","INGREDIENT","Footer","Content","HomePage","render","console","log","props","ingredient","height","textAlign","backgroundColor","mapStateToProps","state","fethcSuccess","success","data","mapDispatchToProps","dispatch","getIngredient","request"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,OAAnC,QAAkD,cAAlD;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAsBP,MAA5B;;AAEA,MAAMQ,QAAN,SAAuBT,SAAvB,CAAiC;AAC/BU,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKC,KAAL,CAAWC,UAAhC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE,IADT;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,SAAS,EAAE,QAFN;AAGLC,QAAAA,eAAe,EAAE;AAHZ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eA8BE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDA9BF,CADF,CADF;AAsCD;;AAzC8B,C,CA4CjC;;;AACA,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjCR,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,KAAvB;AACA,QAAMC,YAAY,GAAGD,KAAK,CAACL,UAAN,CAAiBO,OAAtC,CAFiC,CAGjC;;AACA,MAAID,YAAJ,EAAkB;AAChB,UAAMN,UAAU,GAAGK,KAAnB;AACA,WAAO;AACLL,MAAAA,UAAU,EAAEA,UAAU,CAACA,UAAX,CAAsBQ;AAD7B,KAAP;AAGD;AACF,CAVD,C,CAYA;;;AACA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,aAAa,EAAED,QAAQ,CAAClB,UAAU,CAACoB,OAAX,EAAD;AADlB,GAAP;AAGD;;AAED,eAAexB,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,QAA7C,CAAf","sourcesContent":["import { React, Component, Layout, connect } from \"../../global\";\nimport { Space, Card } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nconst { Footer, Content } = Layout;\n\nclass HomePage extends Component {\n  render() {\n    console.log('props', this.props.ingredient);\n    return (\n      <div>\n        <Layout>\n          <PublicHeader />\n          <Content\n            width={1300}\n            style={{\n              height: \"840px\",\n              textAlign: \"center\",\n              backgroundColor: \"#eeeff1\",\n            }}\n          >\n            {/* \n            {this.props.ingredient.map((data, index) => {\n              return (\n                <div className=\"space-align-container\" key={index}>\n                  <div className=\"space-align-block\">\n                    <Space align=\"center\">\n                      <div className=\"site-card-border-less-wrapper\">\n                        <Card title=\"Card title\" bordered={false} style={{ width: 300 }}>\n\n                        </Card>\n                      </div>\n                    </Space>\n                  </div>\n                </div>\n\n              );\n            })} */}\n\n\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            Design Â©2020 Created by Nikola Mrkic\n          </Footer>\n        </Layout>\n      </div>\n    );\n  }\n}\n\n// Map State To Props (Redux Store Passes State To Component)\nconst mapStateToProps = (state) => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success;\n  // Redux Store --> Component\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data,\n    };\n  }\n};\n\n// anything returned from this function will end up as props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);"]},"metadata":{},"sourceType":"module"}