{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js\";\nimport { React, Component, Layout, connect, Card, Row, Col, Modal } from \"../../global\";\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nimport OrderForm from \"../../components/public/order/form/OrderForm\";\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\nconst {\n  Footer,\n  Content\n} = Layout;\nconst initialState = {\n  isVisibleModal: false,\n  ingredientPizza: \"\",\n  pizzaName: \"\",\n  pizzaTime: \"\",\n  pizzaPrice: \"\"\n};\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clear = () => {};\n\n    this.createTimeToMakePizza = time => {\n      let seconds = time / 1000.0;\n      let decPart = (seconds + \"\").split(\".\")[1];\n      return decPart;\n    };\n\n    this.openIngredientCard = data => {\n      console.log('dataaaaaaaaaa', data);\n      let millisec = data.time;\n      let seconds = millisec / 1000.0;\n      console.log('seconds', seconds); //proslediti sekunde za izradu pice\n\n      let decPart = (seconds + \"\").split(\".\")[1];\n      this.setState({\n        isVisibleModal: true,\n        ingredientPizza: data,\n        pizzaName: data.name,\n        pizzaTime: decPart,\n        pizzaPrice: data.price\n      });\n    };\n\n    this.closeIngredientCard = () => {\n      this.setState({ ...initialState\n      });\n      console.log('this.state', this.state);\n    };\n\n    this.state = {\n      isVisibleModal: false,\n      ingredientPizza: \"\",\n      pizzaName: \"\",\n      pizzaTime: \"\",\n      pizzaPrice: \"\"\n    };\n  }\n\n  render() {\n    if (this.props.ingredient) {\n      console.log(\"this.state,\", this.state);\n      const {\n        current,\n        setCurrent,\n        isVisibleModal,\n        ingredientPizza,\n        pizzaName,\n        pizzaTime,\n        pizzaPrice\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(PublicHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Content, {\n        width: 1300,\n        style: {\n          height: \"830px\",\n          textAlign: \"center\",\n          backgroundColor: \"#eeeff1\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Place the ingredients on the pizza.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          padding: \"3rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, this.props.ingredient.map((data, index) => {\n        return /*#__PURE__*/React.createElement(Col, {\n          span: 6,\n          key: index,\n          type: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          title: data.name.toUpperCase(),\n          hoverable: true,\n          onClick: () => this.openIngredientCard(data),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 27\n          }\n        }, \"Price : \", data.price + \" $\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 27\n          }\n        }, \"Time to make pizza : \", this.createTimeToMakePizza(data.time) + \" min\", \" \")));\n      })))), /*#__PURE__*/React.createElement(Modal, {\n        title: \"Pizza to order \" + pizzaName + \" | Time to make: \" + pizzaTime + \"min\" + \" | Price : \" + pizzaPrice + \"$\",\n        visible: isVisibleModal,\n        onCancel: this.closeIngredientCard,\n        width: 550,\n        footer: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(OrderForm, {\n        initalValues: ingredientPizza,\n        onCancel: this.closeIngredientCard(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Footer, {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, \"Design \\xA92020 Created by Nikola Mrkic\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      });\n    }\n  }\n\n} // Map State To Props (Redux Store Passes State To Component)\n\n\nconst mapStateToProps = state => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success; // Redux Store --> Component\n\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data\n    };\n  }\n}; // anything returned from this function will end up as props\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js"],"names":["React","Component","Layout","connect","Card","Row","Col","Modal","PublicHeader","INGREDIENT","OrderForm","ConsoleSqlOutlined","Footer","Content","initialState","isVisibleModal","ingredientPizza","pizzaName","pizzaTime","pizzaPrice","HomePage","constructor","props","clear","createTimeToMakePizza","time","seconds","decPart","split","openIngredientCard","data","console","log","millisec","setState","name","price","closeIngredientCard","state","render","ingredient","current","setCurrent","height","textAlign","backgroundColor","padding","map","index","toUpperCase","mapStateToProps","fethcSuccess","success","mapDispatchToProps","dispatch","getIngredient","request"],"mappings":"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","sourcesContent":["import { React, Component, Layout, connect, Card, Row, Col, Modal } from \"../../global\";\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nimport OrderForm from \"../../components/public/order/form/OrderForm\";\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\nconst { Footer, Content } = Layout;\nconst initialState = {\n  isVisibleModal: false,\n  ingredientPizza: \"\",\n  pizzaName: \"\",\n  pizzaTime: \"\",\n  pizzaPrice: \"\"\n}\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisibleModal: false,\n      ingredientPizza: \"\",\n      pizzaName: \"\",\n      pizzaTime: \"\",\n      pizzaPrice: \"\"\n    };\n  }\n\n  clear = () => {\n\n  };\n\n\n  createTimeToMakePizza = (time) => {\n    let seconds = time / 1000.0;\n    let decPart = (seconds + \"\").split(\".\")[1];\n    return decPart\n  };\n\n\n  openIngredientCard = (data) => {\n    console.log('dataaaaaaaaaa', data);\n    let millisec = data.time;\n    let seconds = millisec / 1000.0;\n    console.log('seconds', seconds);\n    //proslediti sekunde za izradu pice\n    let decPart = (seconds + \"\").split(\".\")[1];\n\n    this.setState({\n      isVisibleModal: true,\n      ingredientPizza: data,\n      pizzaName: data.name,\n      pizzaTime: decPart,\n      pizzaPrice: data.price\n\n    })\n  };\n\n  closeIngredientCard = () => {\n\n    this.setState({\n      ...initialState\n    })\n    console.log('this.state', this.state);\n\n  };\n\n\n  render() {\n    if (this.props.ingredient) {\n      console.log(\"this.state,\", this.state)\n\n      const { current, setCurrent, isVisibleModal, ingredientPizza, pizzaName, pizzaTime, pizzaPrice } = this.state;\n      return (\n        <div >\n          <Layout>\n            <PublicHeader />\n            <Content\n              width={1300}\n              style={{\n                height: \"830px\",\n                textAlign: \"center\",\n                backgroundColor: \"#eeeff1\",\n              }}\n            >\n              <Card title=\"Place the ingredients on the pizza.\"  >\n                <Row style={{\n                  padding: \"3rem\",\n\n                }}>\n                  {this.props.ingredient.map((data, index) => {\n                    return (\n                      <Col span={6} key={index} type=\"primary\" >\n                        <Card title={data.name.toUpperCase()} hoverable={true} onClick={() => this.openIngredientCard(data)} >\n                          <p>Price : {data.price + \" $\"}</p>\n                          <p>Time to make pizza : {this.createTimeToMakePizza(data.time) + \" min\"} </p>\n                        </Card>\n                      </Col>\n                    );\n                  })}\n                </Row>\n              </Card>\n\n            </Content>\n\n            <Modal\n              title={\"Pizza to order \" + pizzaName + \" | Time to make: \" + pizzaTime + \"min\" + \" | Price : \" + pizzaPrice + \"$\"}\n              visible={isVisibleModal}\n              onCancel={this.closeIngredientCard}\n              width={550}\n              footer={false}\n            >\n              <OrderForm initalValues={ingredientPizza} onCancel={this.closeIngredientCard()} />\n            </Modal>\n\n            <Footer style={{ textAlign: \"center\" }}>\n              Design ©2020 Created by Nikola Mrkic\n            </Footer>\n          </Layout>\n        </div>\n      );\n    } else {\n      return (<div>\n      </div>)\n    }\n\n  }\n}\n\n// Map State To Props (Redux Store Passes State To Component)\nconst mapStateToProps = (state) => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success;\n  // Redux Store --> Component\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data,\n    };\n  }\n};\n\n// anything returned from this function will end up as props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);"]},"metadata":{},"sourceType":"module"}