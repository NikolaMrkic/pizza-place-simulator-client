{"ast":null,"code":"import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { ingredientAction } from \"../../actions/public/ingredientAction/index\";\nimport { INGREDIENT } from \"../../actions/public/ingredientAction/ingredientActionTypes\";\n\nfunction* handleGetIngredient() {\n  console.log(\"DOVLACIMMMMMMMMMMMMMMMMMMMMMM\");\n\n  try {\n    const {\n      data\n    } = yield call(DataUtils.get, `/public/ingredients`);\n    console.log('data iz sage', data);\n    console.log(\"data from saga\", data);\n    yield put(ingredientAction.success({\n      data\n    }));\n  } catch (e) {\n    yield put(ingredientAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nexport function* watchAllIngredientSagas() {\n  yield all(takeLatest(INGREDIENT.GET, handleGetIngredient));\n}\nexport default watchAllIngredientSagas;","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/redux/sagas/public/ingredientSaga.js"],"names":["put","call","takeLatest","all","DataUtils","ingredientAction","INGREDIENT","handleGetIngredient","console","log","data","get","success","e","failure","error","watchAllIngredientSagas","GET"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,gBAAT,QAAiC,6CAAjC;AACA,SAASC,UAAT,QAA2B,6DAA3B;;AAEA,UAAUC,mBAAV,GAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACG,SAAS,CAACO,GAAX,EAAiB,qBAAjB,CAA3B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,IAA5B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAA9B;AACA,UAAMV,GAAG,CAACK,gBAAgB,CAACO,OAAjB,CAAyB;AAAEF,MAAAA;AAAF,KAAzB,CAAD,CAAT;AACD,GALD,CAKE,OAAOG,CAAP,EAAU;AACV,UAAMb,GAAG,CAACK,gBAAgB,CAACS,OAAjB,CAAyB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAAzB,CAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUG,uBAAV,GAAoC;AACzC,QAAMb,GAAG,CACPD,UAAU,CAACI,UAAU,CAACW,GAAZ,EAAiBV,mBAAjB,CADH,CAAT;AAGD;AAED,eAAeS,uBAAf","sourcesContent":["import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { ingredientAction } from \"../../actions/public/ingredientAction/index\";\nimport { INGREDIENT } from \"../../actions/public/ingredientAction/ingredientActionTypes\";\n\nfunction* handleGetIngredient() {\n  console.log(\"DOVLACIMMMMMMMMMMMMMMMMMMMMMM\");\n  try {\n    const { data } = yield call(DataUtils.get, `/public/ingredients`);\n    console.log('data iz sage', data);\n    console.log(\"data from saga\", data);\n    yield put(ingredientAction.success({ data }));\n  } catch (e) {\n    yield put(ingredientAction.failure({ error: { ...e } }));\n  }\n}\n\nexport function* watchAllIngredientSagas() {\n  yield all(\n    takeLatest(INGREDIENT.GET, handleGetIngredient),\n  );\n}\n\nexport default watchAllIngredientSagas;\n"]},"metadata":{},"sourceType":"module"}