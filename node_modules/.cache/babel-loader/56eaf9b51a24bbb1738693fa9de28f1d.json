{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/components/public/order/form/OrderForm.js\";\nimport { React, Field, reduxForm, useDispatch, Button, useState // useHistory,\n} from \"../../../../global\";\nimport { Alert } from 'antd';\nimport { renderInput } from \"../form-component/index\";\nimport ORDER from \"../../../../redux/actions/public/ordersAction/index\";\n\nlet OrderForm = props => {\n  const [visible, setVisible] = useState(true);\n  const dispatch = useDispatch(); // let history = useHistory();\n  // console.log(\"props sa ordera\", props);\n\n  const onSubmitForm = values => {\n    const order = { ...props.initalValues,\n      ...values\n    };\n    console.log(\"props.initalValues\", props.initalValues);\n    console.log(\"values\", values);\n    console.log(\"order sa forme\", order);\n    dispatch(ORDER.save(order)); // props.clearFields()\n  };\n\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  const {\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmitForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    label: \"First Name\",\n    name: \"firstName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter first name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Address\",\n    name: \"address\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Phone\",\n    name: \"phone\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"Order\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => {\n      props.closeIngredientCard();\n      props.reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Close Order\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, visible ? /*#__PURE__*/React.createElement(Alert, {\n    message: \"Thanks for the order. Your pizza is ready for\",\n    type: \"success\",\n    closable: true,\n    afterClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"placeholder text here\")), \");\"));\n}; // redux-form\n\n\nOrderForm = reduxForm({\n  form: \"OrderForm\"\n})(OrderForm); // Important: connect only after calling reduxForm!!!\n\nexport default OrderForm;","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/components/public/order/form/OrderForm.js"],"names":["React","Field","reduxForm","useDispatch","Button","useState","Alert","renderInput","ORDER","OrderForm","props","visible","setVisible","dispatch","onSubmitForm","values","order","initalValues","console","log","save","handleClose","handleSubmit","textAlign","closeIngredientCard","reset","form"],"mappings":"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","sourcesContent":["import {\n    React,\n    Field,\n    reduxForm,\n    useDispatch,\n    Button,\n    useState,\n    // useHistory,\n} from \"../../../../global\";\nimport { Alert } from 'antd';\nimport { renderInput } from \"../form-component/index\";\nimport ORDER from \"../../../../redux/actions/public/ordersAction/index\"\n\nlet OrderForm = (props) => {\n    const [visible, setVisible] = useState(true);\n    const dispatch = useDispatch();\n    // let history = useHistory();\n    // console.log(\"props sa ordera\", props);\n\n    const onSubmitForm = (values) => {\n        const order = { ...props.initalValues, ...values }\n        console.log(\"props.initalValues\", props.initalValues);\n        console.log(\"values\", values);\n\n        console.log(\"order sa forme\", order);\n        dispatch(ORDER.save(order));\n        // props.clearFields()\n    };\n\n    const handleClose = () => {\n        setVisible(false);\n    };\n\n\n    const { handleSubmit } = props;\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmitForm)}>\n                <div>\n\n                    <div>\n                        <div>\n                            <Field\n                                label=\"First Name\"\n                                name=\"firstName\"\n                                component={renderInput}\n                                type=\"text\"\n                                placeholder=\"Enter first name\"\n                            />\n                            <Field\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                component={renderInput}\n                                type=\"text\"\n                                placeholder=\"Enter last name\"\n                            />\n                            <Field\n                                label=\"Address\"\n                                name=\"address\"\n                                component={renderInput}\n                                type=\"text\"\n                                placeholder=\"Enter address\"\n                            />\n                            <Field\n                                label=\"Phone\"\n                                name=\"phone\"\n                                component={renderInput}\n                                type=\"text\"\n                                placeholder=\"Enter phone\"\n                            />\n                        </div>\n                    </div>\n                    <div style={{ textAlign: \"center\" }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Order\n                         </Button>\n                        <Button type=\"button\" onClick={() => {\n                            props.closeIngredientCard()\n                            props.reset()\n                        }\n                        }>\n\n                            Close Order\n                         </Button>\n                    </div>\n                </div>\n            </form>\n            <div>\n                <div>\n                    {visible ? (\n                        <Alert message=\"Thanks for the order. Your pizza is ready for\" type=\"success\" closable afterClose={handleClose} />\n                    ) : null}\n                    <p>placeholder text here</p>\n                </div>\n  );\n            </div>\n        </div>\n    );\n};\n\n// redux-form\nOrderForm = reduxForm({\n    form: \"OrderForm\",\n})(OrderForm);\n\n// Important: connect only after calling reduxForm!!!\nexport default OrderForm;"]},"metadata":{},"sourceType":"module"}