{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/CutApp/hairdressing-front-managment/src/components/admin-components/tables/UsersTable.js\";\nimport { React, useState, Table, Modal, Button } from \"../../../global\";\nimport UserForm from \"../forms/User/UserForm\";\nimport USER_ADMIN from \"../../../redux/actions/admin/userAction\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Spin } from \"antd\";\n\nconst UsersTable = () => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [isDataForEdit, setDataForEdit] = useState(false);\n  const [userTitleForm, setUserTitle] = useState(\"Add User\");\n  const [useUser, setUser] = useState(\"\");\n  const users = useSelector(state => state.adminUsers.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(USER_ADMIN.request());\n  }, []);\n  const tableData = users.length > 0 ? users.length : \"\";\n\n  if (users.length > 0) {\n    const dataSource = users.map((user, index) => ({\n      key: index,\n      userId: user.userId,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      userName: user.userName,\n      email: user.email,\n      phone: user.phone,\n      address: user.address,\n      delete: user.delete\n    }));\n    const columns = [{\n      title: \"ID\",\n      dataIndex: \"userId\",\n      key: \"userId\"\n    }, {\n      title: \"Ime\",\n      dataIndex: \"firstName\",\n      key: \"firstName\"\n    }, {\n      title: \"Prezime\",\n      dataIndex: \"lastName\",\n      key: \"lastName\"\n    }, {\n      title: \"Korisnicko ime\",\n      dataIndex: \"userName\",\n      key: \"userName\"\n    }, {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    }, {\n      title: \"Telefon\",\n      dataIndex: \"phone\",\n      key: \"phone\"\n    }, {\n      title: \"Uredi\",\n      dataIndex: \"Edit\",\n      key: \"Edit\",\n      render: (text, data) => /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => handlerForEdit(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"Edit\")\n    }, {\n      title: \"Obrisi\",\n      dataIndex: \"Delete\",\n      key: \"Delete\",\n      render: () => /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        danger: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"Delete\")\n    }];\n\n    const handlerForEdit = userForEdit => {\n      setUserTitle(\"Edit User : \" + userForEdit.firstName + \" \" + userForEdit.lastName);\n      setIsVisibleModal(true);\n      setDataForEdit(true);\n      setUser(userForEdit);\n    };\n\n    const resetForm = () => {\n      dispatch(USER_ADMIN.request());\n      setIsVisibleModal(false);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      pagination: {\n        pageSize: 10\n      },\n      dataSource: dataSource,\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      title: userTitleForm,\n      visible: isVisibleModal,\n      onCancel: resetForm,\n      width: 1300,\n      footer: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UserForm, {\n      initialValues: useUser,\n      editableForm: isDataForEdit,\n      onSubmitForm: test(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    console.log(\"ELSE\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default UsersTable;","map":{"version":3,"sources":["/home/nikola/projekti/CutApp/hairdressing-front-managment/src/components/admin-components/tables/UsersTable.js"],"names":["React","useState","Table","Modal","Button","UserForm","USER_ADMIN","useEffect","useSelector","useDispatch","Spin","UsersTable","isVisibleModal","setIsVisibleModal","isDataForEdit","setDataForEdit","userTitleForm","setUserTitle","useUser","setUser","users","state","adminUsers","data","dispatch","request","tableData","length","dataSource","map","user","index","key","userId","firstName","lastName","userName","email","phone","address","delete","columns","title","dataIndex","render","text","handlerForEdit","userForEdit","resetForm","pageSize","test","console","log"],"mappings":"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","sourcesContent":["import { React, useState, Table, Modal, Button } from \"../../../global\";\nimport UserForm from \"../forms/User/UserForm\";\nimport USER_ADMIN from \"../../../redux/actions/admin/userAction\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Spin } from \"antd\";\n\nconst UsersTable = () => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [isDataForEdit, setDataForEdit] = useState(false);\n  const [userTitleForm, setUserTitle] = useState(\"Add User\");\n\n  const [useUser, setUser] = useState(\"\");\n  const users = useSelector((state) => state.adminUsers.data);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(USER_ADMIN.request());\n  }, []);\n\n  const tableData = users.length > 0 ? users.length : \"\";\n\n  if (users.length > 0) {\n    const dataSource = users.map((user, index) => ({\n      key: index,\n      userId: user.userId,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      userName: user.userName,\n      email: user.email,\n      phone: user.phone,\n      address: user.address,\n      delete: user.delete,\n    }));\n    const columns = [\n      {\n        title: \"ID\",\n        dataIndex: \"userId\",\n        key: \"userId\",\n      },\n      {\n        title: \"Ime\",\n        dataIndex: \"firstName\",\n        key: \"firstName\",\n      },\n      {\n        title: \"Prezime\",\n        dataIndex: \"lastName\",\n        key: \"lastName\",\n      },\n      {\n        title: \"Korisnicko ime\",\n        dataIndex: \"userName\",\n        key: \"userName\",\n      },\n      {\n        title: \"Email\",\n        dataIndex: \"email\",\n        key: \"email\",\n      },\n      {\n        title: \"Telefon\",\n        dataIndex: \"phone\",\n        key: \"phone\",\n      },\n      {\n        title: \"Uredi\",\n        dataIndex: \"Edit\",\n        key: \"Edit\",\n        render: (text, data) => (\n          <Button type=\"primary\" onClick={() => handlerForEdit(data)}>\n            Edit\n          </Button>\n        ),\n      },\n      {\n        title: \"Obrisi\",\n        dataIndex: \"Delete\",\n        key: \"Delete\",\n        render: () => (\n          <Button type=\"primary\" danger>\n            Delete\n          </Button>\n        ),\n      },\n    ];\n\n    const handlerForEdit = (userForEdit) => {\n      setUserTitle(\n        \"Edit User : \" + userForEdit.firstName + \" \" + userForEdit.lastName\n      );\n      setIsVisibleModal(true);\n      setDataForEdit(true);\n      setUser(userForEdit);\n    };\n\n    const resetForm = () => {\n      dispatch(USER_ADMIN.request());\n      setIsVisibleModal(false);\n    };\n\n    return (\n      <div>\n        <Table\n          pagination={{ pageSize: 10 }}\n          dataSource={dataSource}\n          columns={columns}\n        />\n        <Modal\n          title={userTitleForm}\n          visible={isVisibleModal}\n          onCancel={resetForm}\n          width={1300}\n          footer={false}\n        >\n          <UserForm\n            initialValues={useUser}\n            editableForm={isDataForEdit}\n            onSubmitForm={test()}\n          />\n        </Modal>\n      </div>\n    );\n  } else {\n    console.log(\"ELSE\");\n    return (\n      <div className=\"example\">\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n};\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}