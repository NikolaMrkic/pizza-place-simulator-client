{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js\";\nimport { React, Component, Layout, connect } from \"../../global\";\nimport { Space, Card, Row, Col } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nconst {\n  Footer,\n  Content\n} = Layout;\n\nclass HomePage extends Component {\n  render() {\n    console.log('props', this.props.ingredient);\n    const gridStyle = {\n      padding: \"1rem\"\n    };\n\n    if (this.props.ingredient) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(PublicHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Content, {\n        width: 300,\n        style: {\n          height: \"840px\",\n          textAlign: \"center\",\n          backgroundColor: \"#eeeff1\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Place the ingredients on the pizza.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, this.props.ingredient.map((data, index) => {\n        return /*#__PURE__*/React.createElement(Col, {\n          span: 6,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          title: data.name,\n          hoverable: true,\n          gridStyle: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 27\n          }\n        }, \"Price : \", data.price), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 27\n          }\n        }, \"Time to make pizza : \", data.time)));\n      }))), /*#__PURE__*/React.createElement(Steps, {\n        current: current,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, steps.map(item => /*#__PURE__*/React.createElement(Step, {\n        key: item.title,\n        title: item.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, steps[current].content), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, current < steps.length - 1 && /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => next(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, \"Next\"), current === steps.length - 1 && /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => message.success('Processing complete!'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, \"Done\"), current > 0 && /*#__PURE__*/React.createElement(Button, {\n        style: {\n          margin: '0 8px'\n        },\n        onClick: () => prev(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, \"Previous\"))), /*#__PURE__*/React.createElement(Footer, {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"Design \\xA92020 Created by Nikola Mrkic\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      });\n    }\n  }\n\n} // Map State To Props (Redux Store Passes State To Component)\n\n\nconst mapStateToProps = state => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success; // Redux Store --> Component\n\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data\n    };\n  }\n}; // anything returned from this function will end up as props\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js"],"names":["React","Component","Layout","connect","Space","Card","Row","Col","PublicHeader","INGREDIENT","Footer","Content","HomePage","render","console","log","props","ingredient","gridStyle","padding","height","textAlign","backgroundColor","map","data","index","name","price","time","current","steps","item","title","content","length","next","message","success","margin","prev","mapStateToProps","state","fethcSuccess","mapDispatchToProps","dispatch","getIngredient","request"],"mappings":"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","sourcesContent":["import { React, Component, Layout, connect } from \"../../global\";\nimport { Space, Card, Row, Col } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nconst { Footer, Content } = Layout;\n\nclass HomePage extends Component {\n  render() {\n    console.log('props', this.props.ingredient);\n    const gridStyle = {\n      padding: \"1rem\"\n    };\n    if (this.props.ingredient) {\n      return (\n        <div>\n          <Layout>\n            <PublicHeader />\n            <Content\n              width={300}\n              style={{\n                height: \"840px\",\n                textAlign: \"center\",\n                backgroundColor: \"#eeeff1\",\n              }}\n            >\n\n\n\n              <Card title=\"Place the ingredients on the pizza.\"  >\n                <Row>\n                  {this.props.ingredient.map((data, index) => {\n                    return (\n\n                      <Col span={6} key={index} >\n                        <Card title={data.name} hoverable={true} gridStyle >\n                          <p>Price : {data.price}</p>\n                          <p>Time to make pizza : {data.time}</p>\n                        </Card>\n                      </Col>\n                    );\n                  })}\n                </Row>\n              </Card>\n              <Steps current={current}>\n                {steps.map(item => (\n                  <Step key={item.title} title={item.title} />\n                ))}\n              </Steps>\n              <div className=\"steps-content\">{steps[current].content}</div>\n              <div className=\"steps-action\">\n                {current < steps.length - 1 && (\n                  <Button type=\"primary\" onClick={() => next()}>\n                    Next\n                  </Button>\n                )}\n                {current === steps.length - 1 && (\n                  <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\n                    Done\n                  </Button>\n                )}\n                {current > 0 && (\n                  <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n                    Previous\n                  </Button>\n                )}\n              </div>\n\n\n            </Content>\n            <Footer style={{ textAlign: \"center\" }}>\n              Design ©2020 Created by Nikola Mrkic\n            </Footer>\n          </Layout>\n        </div>\n      );\n    } else {\n      return (<div>\n      </div>)\n    }\n\n  }\n}\n\n// Map State To Props (Redux Store Passes State To Component)\nconst mapStateToProps = (state) => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success;\n  // Redux Store --> Component\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data,\n    };\n  }\n};\n\n// anything returned from this function will end up as props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);"]},"metadata":{},"sourceType":"module"}