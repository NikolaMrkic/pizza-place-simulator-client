{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: process.env.APP_SERVER\n});\n\nconst get = async function (url, options = {}) {\n  let result = [];\n  let error;\n  await api.get(url, options).then(res => result = res, err => error = err);\n\n  if (error !== undefined) {\n    throw error.response;\n  }\n\n  const dataAndStatusForGet = {\n    data: result.data,\n    status: result.status\n  };\n  return dataAndStatusForGet;\n};\n\nconst post = async function (url, data, options = {}) {\n  let result = [];\n  await api.post(url, data, options).then(res => result = res);\n  const dataAndStatusForPost = {\n    data: result.data,\n    status: result.status\n  };\n  return dataAndStatusForPost;\n};\n\nconst put = async function (url, data, options = {}) {\n  let result = [];\n  await api.put(url, data, options).then(res => result = res);\n  const dataAndStatusForUpdate = {\n    data: result.data,\n    status: result.status\n  };\n  return dataAndStatusForUpdate;\n};\n\nconst del = async function (url, options = {}) {\n  var result = [];\n  await api.delete(url, options).then(res => result = res);\n  const dataAndStatusForDelete = {\n    data: result.data,\n    status: result.status\n  };\n  return dataAndStatusForDelete;\n};\n\nexport default {\n  get,\n  post,\n  put,\n  del\n};","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/DataUtils.js"],"names":["axios","api","create","baseURL","process","env","APP_SERVER","get","url","options","result","error","then","res","err","undefined","response","dataAndStatusForGet","data","status","post","dataAndStatusForPost","put","dataAndStatusForUpdate","del","delete","dataAndStatusForDelete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADE,CAAb,CAAZ;;AAIA,MAAMC,GAAG,GAAG,gBAAgBC,GAAhB,EAAqBC,OAAO,GAAG,EAA/B,EAAmC;AAC7C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAJ;AACA,QAAMV,GAAG,CAACM,GAAJ,CAAQC,GAAR,EAAaC,OAAb,EAAsBG,IAAtB,CACHC,GAAD,IAAUH,MAAM,GAAGG,GADf,EAEHC,GAAD,IAAUH,KAAK,GAAGG,GAFd,CAAN;;AAKA,MAAIH,KAAK,KAAKI,SAAd,EAAyB;AACvB,UAAMJ,KAAK,CAACK,QAAZ;AACD;;AACD,QAAMC,mBAAmB,GAAG;AAAEC,IAAAA,IAAI,EAAER,MAAM,CAACQ,IAAf;AAAqBC,IAAAA,MAAM,EAAET,MAAM,CAACS;AAApC,GAA5B;AACA,SAAOF,mBAAP;AACD,CAbD;;AAeA,MAAMG,IAAI,GAAG,gBAAgBZ,GAAhB,EAAqBU,IAArB,EAA2BT,OAAO,GAAG,EAArC,EAAyC;AACpD,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMT,GAAG,CAACmB,IAAJ,CAASZ,GAAT,EAAcU,IAAd,EAAoBT,OAApB,EAA6BG,IAA7B,CAAmCC,GAAD,IAAUH,MAAM,GAAGG,GAArD,CAAN;AACA,QAAMQ,oBAAoB,GAAG;AAAEH,IAAAA,IAAI,EAAER,MAAM,CAACQ,IAAf;AAAqBC,IAAAA,MAAM,EAAET,MAAM,CAACS;AAApC,GAA7B;AAEA,SAAOE,oBAAP;AACD,CAND;;AAQA,MAAMC,GAAG,GAAG,gBAAgBd,GAAhB,EAAqBU,IAArB,EAA2BT,OAAO,GAAG,EAArC,EAAyC;AACnD,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMT,GAAG,CAACqB,GAAJ,CAAQd,GAAR,EAAaU,IAAb,EAAmBT,OAAnB,EAA4BG,IAA5B,CAAkCC,GAAD,IAAUH,MAAM,GAAGG,GAApD,CAAN;AACA,QAAMU,sBAAsB,GAAG;AAAEL,IAAAA,IAAI,EAAER,MAAM,CAACQ,IAAf;AAAqBC,IAAAA,MAAM,EAAET,MAAM,CAACS;AAApC,GAA/B;AACA,SAAOI,sBAAP;AACD,CALD;;AAOA,MAAMC,GAAG,GAAG,gBAAgBhB,GAAhB,EAAqBC,OAAO,GAAG,EAA/B,EAAmC;AAC7C,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMT,GAAG,CAACwB,MAAJ,CAAWjB,GAAX,EAAgBC,OAAhB,EAAyBG,IAAzB,CAA+BC,GAAD,IAAUH,MAAM,GAAGG,GAAjD,CAAN;AACA,QAAMa,sBAAsB,GAAG;AAAER,IAAAA,IAAI,EAAER,MAAM,CAACQ,IAAf;AAAqBC,IAAAA,MAAM,EAAET,MAAM,CAACS;AAApC,GAA/B;AAEA,SAAOO,sBAAP;AACD,CAND;;AAQA,eAAe;AACbnB,EAAAA,GADa;AAEba,EAAAA,IAFa;AAGbE,EAAAA,GAHa;AAIbE,EAAAA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.APP_SERVER\n});\n\nconst get = async function (url, options = {}) {\n  let result = [];\n  let error;\n  await api.get(url, options).then(\n    (res) => (result = res),\n    (err) => (error = err)\n  );\n\n  if (error !== undefined) {\n    throw error.response;\n  }\n  const dataAndStatusForGet = { data: result.data, status: result.status };\n  return dataAndStatusForGet;\n};\n\nconst post = async function (url, data, options = {}) {\n  let result = [];\n  await api.post(url, data, options).then((res) => (result = res));\n  const dataAndStatusForPost = { data: result.data, status: result.status };\n\n  return dataAndStatusForPost;\n};\n\nconst put = async function (url, data, options = {}) {\n  let result = [];\n  await api.put(url, data, options).then((res) => (result = res));\n  const dataAndStatusForUpdate = { data: result.data, status: result.status };\n  return dataAndStatusForUpdate;\n};\n\nconst del = async function (url, options = {}) {\n  var result = [];\n  await api.delete(url, options).then((res) => (result = res));\n  const dataAndStatusForDelete = { data: result.data, status: result.status };\n\n  return dataAndStatusForDelete;\n};\n\nexport default {\n  get,\n  post,\n  put,\n  del,\n};\n"]},"metadata":{},"sourceType":"module"}