{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/components/public/order/form/OrderForm.js\";\nimport { React, Field, reduxForm, useDispatch, Button, useState // useHistory,\n} from \"../../../../global\";\nimport { Alert } from 'antd';\nimport { Progress } from 'antd';\nimport { renderInput } from \"../form-component/index\";\nimport ORDER from \"../../../../redux/actions/public/ordersAction/index\";\n\nlet OrderForm = props => {\n  console.log('props sa forme', props);\n  const [visible, setVisible] = useState(false);\n  const [initalValues, setinitalValues] = useState({});\n  const dispatch = useDispatch(); // let history = useHistory();\n  // console.log(\"props sa ordera\", props);\n\n  const onSubmitForm = values => {\n    const order = { ...props.initalValues,\n      ...values\n    };\n    setinitalValues(order);\n    setVisible(true);\n    console.log(\"props.initalValues\", props.initalValues);\n    console.log(\"values\", values);\n    console.log(\"order sa forme\", order);\n    setTimeout(() => {\n      dispatch(ORDER.save(order));\n    }, order.time); // dataAlert.push({ order });\n    // dispatch(ORDER.save(order));\n    // props.clearFields()\n  };\n\n  const handleClose = () => {\n    setVisible(false);\n  };\n\n  const {\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmitForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    label: \"First Name\",\n    name: \"firstName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter first name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Address\",\n    name: \"address\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Phone\",\n    name: \"phone\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Order\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => {\n      props.closeIngredientCard();\n      props.reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"Close Order\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, visible ? /*#__PURE__*/React.createElement(Alert, {\n    message: initalValues.firstName + \" \" + initalValues.lastName + \" Thanks for the order. Your pizza is ready for \" + props.convertTime(initalValues.time) + \" min.\",\n    type: \"success\",\n    closable: true,\n    afterClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }) : null), /*#__PURE__*/React.createElement(Progress, {\n    strokeColor: {\n      '0%': '#108ee9',\n      '100%': '#87d068'\n    },\n    percent: 99.9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })));\n}; // redux-form\n\n\nOrderForm = reduxForm({\n  form: \"OrderForm\"\n})(OrderForm); // Important: connect only after calling reduxForm!!!\n\nexport default OrderForm;","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/components/public/order/form/OrderForm.js"],"names":["React","Field","reduxForm","useDispatch","Button","useState","Alert","Progress","renderInput","ORDER","OrderForm","props","console","log","visible","setVisible","initalValues","setinitalValues","dispatch","onSubmitForm","values","order","setTimeout","save","time","handleClose","handleSubmit","textAlign","closeIngredientCard","reset","firstName","lastName","convertTime","form"],"mappings":";AAAA,SACIA,KADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,WAJJ,EAKIC,MALJ,EAMIC,QANJ,CAOI;AAPJ,OAQO,oBARP;AASA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,qDAAlB;;AACA,IAAIC,SAAS,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMa,QAAQ,GAAGf,WAAW,EAA5B,CALuB,CAMvB;AACA;;AACA,QAAMgB,YAAY,GAAIC,MAAD,IAAY;AAC7B,UAAMC,KAAK,GAAG,EAAE,GAAGV,KAAK,CAACK,YAAX;AAAyB,SAAGI;AAA5B,KAAd;AACAH,IAAAA,eAAe,CAACI,KAAD,CAAf;AACAN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAK,CAACK,YAAxC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,MAAtB;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BQ,KAA9B;AACAC,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,QAAQ,CAACT,KAAK,CAACc,IAAN,CAAWF,KAAX,CAAD,CAAR;AACH,KAFS,EAEPA,KAAK,CAACG,IAFC,CAAV,CAR6B,CAW7B;AACA;AACA;AACH,GAdD;;AAgBA,QAAMC,WAAW,GAAG,MAAM;AACtBV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFD;;AAKA,QAAM;AAAEW,IAAAA;AAAF,MAAmBf,KAAzB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEe,YAAY,CAACP,YAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,YADV;AAEI,IAAA,IAAI,EAAC,WAFT;AAGI,IAAA,SAAS,EAAEX,WAHf;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC,kBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,SAAS,EAAEA,WAHf;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC,iBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAeI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,SAAS,EAAEA,WAHf;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC,eALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAsBI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,SAAS,EAAEA,WAHf;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ,CAFJ,eAkCI;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAM;AACjChB,MAAAA,KAAK,CAACiB,mBAAN;AACAjB,MAAAA,KAAK,CAACkB,KAAN;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CAlCJ,CADJ,CADJ,eAmDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,OAAO,gBAEJ,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEE,YAAY,CAACc,SAAb,GAAyB,GAAzB,GAA+Bd,YAAY,CAACe,QAA5C,GAAuD,iDAAvD,GAA2GpB,KAAK,CAACqB,WAAN,CAAkBhB,YAAY,CAACQ,IAA/B,CAA3G,GAAkJ,OAAlK;AAA2K,IAAA,IAAI,EAAC,SAAhL;AAA0L,IAAA,QAAQ,MAAlM;AAAmM,IAAA,UAAU,EAAEC,WAA/M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,GAGJ,IAJR,CADJ,eAOI,oBAAC,QAAD;AACI,IAAA,WAAW,EAAE;AACT,YAAM,SADG;AAET,cAAQ;AAFC,KADjB;AAKI,IAAA,OAAO,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAnDJ,CADJ;AAqEH,CApGD,C,CAsGA;;;AACAf,SAAS,GAAGR,SAAS,CAAC;AAClB+B,EAAAA,IAAI,EAAE;AADY,CAAD,CAAT,CAETvB,SAFS,CAAZ,C,CAIA;;AACA,eAAeA,SAAf","sourcesContent":["import {\n    React,\n    Field,\n    reduxForm,\n    useDispatch,\n    Button,\n    useState,\n    // useHistory,\n} from \"../../../../global\";\nimport { Alert } from 'antd';\nimport { Progress } from 'antd';\nimport { renderInput } from \"../form-component/index\";\nimport ORDER from \"../../../../redux/actions/public/ordersAction/index\"\nlet OrderForm = (props) => {\n    console.log('props sa forme', props);\n    const [visible, setVisible] = useState(false);\n    const [initalValues, setinitalValues] = useState({});\n\n    const dispatch = useDispatch();\n    // let history = useHistory();\n    // console.log(\"props sa ordera\", props);\n    const onSubmitForm = (values) => {\n        const order = { ...props.initalValues, ...values }\n        setinitalValues(order);\n        setVisible(true)\n        console.log(\"props.initalValues\", props.initalValues);\n        console.log(\"values\", values);\n\n        console.log(\"order sa forme\", order);\n        setTimeout(() => {\n            dispatch(ORDER.save(order));\n        }, order.time)\n        // dataAlert.push({ order });\n        // dispatch(ORDER.save(order));\n        // props.clearFields()\n    };\n\n    const handleClose = () => {\n        setVisible(false);\n    };\n\n\n    const { handleSubmit } = props;\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmitForm)}>\n                <div>\n\n                    <div>\n                        <div>\n                            <Field\n                                label=\"First Name\"\n                                name=\"firstName\"\n                                component={renderInput}\n                                type=\"text\"\n                                placeholder=\"Enter first name\"\n                            />\n                            <Field\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                component={renderInput}\n                                type=\"text\"\n                                placeholder=\"Enter last name\"\n                            />\n                            <Field\n                                label=\"Address\"\n                                name=\"address\"\n                                component={renderInput}\n                                type=\"text\"\n                                placeholder=\"Enter address\"\n                            />\n                            <Field\n                                label=\"Phone\"\n                                name=\"phone\"\n                                component={renderInput}\n                                type=\"text\"\n                                placeholder=\"Enter phone\"\n                            />\n                        </div>\n                    </div>\n                    <div style={{ textAlign: \"center\" }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Order\n                         </Button>\n                        <Button type=\"button\" onClick={() => {\n                            props.closeIngredientCard()\n                            props.reset()\n                        }\n                        }>\n\n                            Close Order\n                         </Button>\n                    </div>\n                </div>\n            </form>\n            <div>\n                <div>\n                    {visible ? (\n\n                        <Alert message={initalValues.firstName + \" \" + initalValues.lastName + \" Thanks for the order. Your pizza is ready for \" + props.convertTime(initalValues.time) + \" min.\"} type=\"success\" closable afterClose={handleClose} />\n                    ) : null}\n                </div>\n                <Progress\n                    strokeColor={{\n                        '0%': '#108ee9',\n                        '100%': '#87d068',\n                    }}\n                    percent={99.9}\n                />\n            </div>\n        </div>\n    );\n};\n\n// redux-form\nOrderForm = reduxForm({\n    form: \"OrderForm\",\n})(OrderForm);\n\n// Important: connect only after calling reduxForm!!!\nexport default OrderForm;"]},"metadata":{},"sourceType":"module"}