{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/CutApp/hairdressing-front-managment/src/components/admin-components/forms/User/UserForm.js\";\nimport { React, Field, reduxForm, useDispatch, Button } from \"../../../../global\";\nimport { reset } from \"redux-form\";\nimport { renderInput } from \"../form-component/index\";\nimport { validate } from \"../form-validation/index\";\nimport USER_ADMIN from \"../../../../redux/actions/admin/userAction/index\";\n\nlet UserForm = props => {\n  const dispatch = useDispatch();\n  console.log(\"props\", props);\n\n  const onSubmitForm = values => {\n    console.log(\"values\", values);\n    const editableForm = props.editableForm;\n    console.log(\"props\", props);\n    console.log(\"editableForm\", editableForm);\n\n    if (editableForm) {\n      dispatch(USER_ADMIN.requestOne(values));\n    } else {\n      console.log(\"usao da dodam\");\n      dispatch(USER_ADMIN.save(values)); // props.history.push(\"/users\");\n    }\n  };\n\n  const {\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmitForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    label: \"Ime\",\n    name: \"firstName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Unesite ime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Prezime\",\n    name: \"lastName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Unesite prezime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Email\",\n    name: \"email\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Unesite email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Telefon\",\n    name: \"phone\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Unesite telefon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Korisnicko ime\",\n    name: \"userName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Unesite korisnicko ime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n}; // redux-form\n\n\nUserForm = reduxForm({\n  form: \"userForm\",\n  validate\n})(UserForm); // Important: connect only after calling reduxForm!!!\n\nexport default UserForm;","map":{"version":3,"sources":["/home/nikola/projekti/CutApp/hairdressing-front-managment/src/components/admin-components/forms/User/UserForm.js"],"names":["React","Field","reduxForm","useDispatch","Button","reset","renderInput","validate","USER_ADMIN","UserForm","props","dispatch","console","log","onSubmitForm","values","editableForm","requestOne","save","handleSubmit","form"],"mappings":"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","sourcesContent":["import {\n  React,\n  Field,\n  reduxForm,\n  useDispatch,\n  Button,\n} from \"../../../../global\";\nimport { reset } from \"redux-form\";\nimport { renderInput } from \"../form-component/index\";\nimport { validate } from \"../form-validation/index\";\nimport USER_ADMIN from \"../../../../redux/actions/admin/userAction/index\";\n\nlet UserForm = (props) => {\n  const dispatch = useDispatch();\n  console.log(\"props\", props);\n\n  const onSubmitForm = (values) => {\n    console.log(\"values\", values);\n    const editableForm = props.editableForm;\n    console.log(\"props\", props);\n    console.log(\"editableForm\", editableForm);\n    if (editableForm) {\n      dispatch(USER_ADMIN.requestOne(values));\n    } else {\n      console.log(\"usao da dodam\");\n      dispatch(USER_ADMIN.save(values));\n      // props.history.push(\"/users\");\n    }\n  };\n\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit(onSubmitForm)}>\n      <div>\n        <div>\n          <Field\n            label=\"Ime\"\n            name=\"firstName\"\n            component={renderInput}\n            type=\"text\"\n            placeholder=\"Unesite ime\"\n          />\n          <Field\n            label=\"Prezime\"\n            name=\"lastName\"\n            component={renderInput}\n            type=\"text\"\n            placeholder=\"Unesite prezime\"\n          />\n          <Field\n            label=\"Email\"\n            name=\"email\"\n            component={renderInput}\n            type=\"text\"\n            placeholder=\"Unesite email\"\n          />\n          <Field\n            label=\"Telefon\"\n            name=\"phone\"\n            component={renderInput}\n            type=\"text\"\n            placeholder=\"Unesite telefon\"\n          />\n          <Field\n            label=\"Korisnicko ime\"\n            name=\"userName\"\n            component={renderInput}\n            type=\"text\"\n            placeholder=\"Unesite korisnicko ime\"\n          />\n        </div>\n      </div>\n      <Button type=\"primary\" htmlType=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\n// redux-form\nUserForm = reduxForm({\n  form: \"userForm\",\n  validate,\n})(UserForm);\n\n// Important: connect only after calling reduxForm!!!\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}