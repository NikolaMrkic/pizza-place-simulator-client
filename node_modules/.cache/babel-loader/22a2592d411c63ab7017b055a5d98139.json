{"ast":null,"code":"import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { userAdminAction } from \"../../actions/admin/userAction\";\nimport { USER_ADMIN } from \"../../actions/admin/userAction/userActionTypes\";\n\nfunction* handleGetAdminUsers() {\n  console.log(\"DOVLACIMMMMMMMMMMMMMMMMMMMMMM\");\n\n  try {\n    const {\n      data\n    } = yield call(DataUtils.get, `/admin/users`);\n    console.log(\"data from saga\", data);\n    yield put(userAdminAction.success({\n      data\n    }));\n  } catch (e) {\n    yield put(userAdminAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* handleGetOne(action) {\n  try {\n    const {\n      id\n    } = action.payload;\n    const {\n      data\n    } = yield call(DataUtils.get, `/admin/user/` + id);\n    console.log(\"data from saga\", data);\n    yield put(userAdminAction.success_one({\n      data\n    }));\n  } catch (e) {\n    yield put(userAdminAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* handlePost(action) {\n  console.log(\"AKCIJAAAAAAAA\", action);\n  const user = action.payload;\n  console.log(\"USER IZ SAGE \", user);\n\n  try {\n    const response = yield call(DataUtils.post, `/admin/user`, user);\n    console.log(\"response from saga\", response.data);\n    yield put(userAdminAction.success({\n      response\n    }));\n  } catch (e) {\n    yield put(userAdminAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nexport function* watchAllUserAdminSagas() {\n  yield all([takeLatest(USER_ADMIN.GET, handleGetAdminUsers), takeLatest(USER_ADMIN.GET_ONE, handleGetOne), takeLatest(USER_ADMIN.SAVE, handlePost) // takeLatest(USER_ADMIN.PUT, handlePut),\n  // takeLatest(USER_ADMIN.PATCH, handlePatch),\n  // takeLatest(USER_ADMIN.DELETE, handleDelete),\n  ]);\n}\nexport default watchAllUserAdminSagas;","map":{"version":3,"sources":["/home/nikola/projekti/CutApp/hairdressing-front-managment/src/redux/sagas/admin/userSagas.js"],"names":["put","call","takeLatest","all","DataUtils","userAdminAction","USER_ADMIN","handleGetAdminUsers","console","log","data","get","success","e","failure","error","handleGetOne","action","id","payload","success_one","handlePost","user","response","post","watchAllUserAdminSagas","GET","GET_ONE","SAVE"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,gDAA3B;;AAEA,UAAUC,mBAAV,GAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AAEA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACG,SAAS,CAACO,GAAX,EAAiB,cAAjB,CAA3B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAA9B;AACA,UAAMV,GAAG,CAACK,eAAe,CAACO,OAAhB,CAAwB;AAAEF,MAAAA;AAAF,KAAxB,CAAD,CAAT;AACD,GAJD,CAIE,OAAOG,CAAP,EAAU;AACV,UAAMb,GAAG,CAACK,eAAe,CAACS,OAAhB,CAAwB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAAxB,CAAD,CAAT;AACD;AACF;;AAED,UAAUG,YAAV,CAAuBC,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAASD,MAAM,CAACE,OAAtB;AACA,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACG,SAAS,CAACO,GAAX,EAAiB,cAAD,GAAiBO,EAAjC,CAA3B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAA9B;AACA,UAAMV,GAAG,CAACK,eAAe,CAACe,WAAhB,CAA4B;AAAEV,MAAAA;AAAF,KAA5B,CAAD,CAAT;AACD,GALD,CAKE,OAAOG,CAAP,EAAU;AACV,UAAMb,GAAG,CAACK,eAAe,CAACS,OAAhB,CAAwB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAAxB,CAAD,CAAT;AACD;AACF;;AAED,UAAUQ,UAAV,CAAqBJ,MAArB,EAA6B;AAC3BT,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BQ,MAA7B;AACA,QAAMK,IAAI,GAAGL,MAAM,CAACE,OAApB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Ba,IAA7B;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMtB,IAAI,CAACG,SAAS,CAACoB,IAAX,EAAkB,aAAlB,EAAgCF,IAAhC,CAA3B;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCc,QAAQ,CAACb,IAA3C;AACA,UAAMV,GAAG,CAACK,eAAe,CAACO,OAAhB,CAAwB;AAAEW,MAAAA;AAAF,KAAxB,CAAD,CAAT;AACD,GAJD,CAIE,OAAOV,CAAP,EAAU;AACV,UAAMb,GAAG,CAACK,eAAe,CAACS,OAAhB,CAAwB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAAxB,CAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUY,sBAAV,GAAmC;AACxC,QAAMtB,GAAG,CAAC,CACRD,UAAU,CAACI,UAAU,CAACoB,GAAZ,EAAiBnB,mBAAjB,CADF,EAERL,UAAU,CAACI,UAAU,CAACqB,OAAZ,EAAqBX,YAArB,CAFF,EAGRd,UAAU,CAACI,UAAU,CAACsB,IAAZ,EAAkBP,UAAlB,CAHF,CAIR;AACA;AACA;AANQ,GAAD,CAAT;AAQD;AAED,eAAeI,sBAAf","sourcesContent":["import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { userAdminAction } from \"../../actions/admin/userAction\";\nimport { USER_ADMIN } from \"../../actions/admin/userAction/userActionTypes\";\n\nfunction* handleGetAdminUsers() {\n  console.log(\"DOVLACIMMMMMMMMMMMMMMMMMMMMMM\");\n\n  try {\n    const { data } = yield call(DataUtils.get, `/admin/users`);\n    console.log(\"data from saga\", data);\n    yield put(userAdminAction.success({ data }));\n  } catch (e) {\n    yield put(userAdminAction.failure({ error: { ...e } }));\n  }\n}\n\nfunction* handleGetOne(action) {\n  try {\n    const { id } = action.payload;\n    const { data } = yield call(DataUtils.get, `/admin/user/` + id);\n    console.log(\"data from saga\", data);\n    yield put(userAdminAction.success_one({ data }));\n  } catch (e) {\n    yield put(userAdminAction.failure({ error: { ...e } }));\n  }\n}\n\nfunction* handlePost(action) {\n  console.log(\"AKCIJAAAAAAAA\", action);\n  const user = action.payload;\n  console.log(\"USER IZ SAGE \", user);\n\n  try {\n    const response = yield call(DataUtils.post, `/admin/user`, user);\n    console.log(\"response from saga\", response.data);\n    yield put(userAdminAction.success({ response }));\n  } catch (e) {\n    yield put(userAdminAction.failure({ error: { ...e } }));\n  }\n}\n\nexport function* watchAllUserAdminSagas() {\n  yield all([\n    takeLatest(USER_ADMIN.GET, handleGetAdminUsers),\n    takeLatest(USER_ADMIN.GET_ONE, handleGetOne),\n    takeLatest(USER_ADMIN.SAVE, handlePost),\n    // takeLatest(USER_ADMIN.PUT, handlePut),\n    // takeLatest(USER_ADMIN.PATCH, handlePatch),\n    // takeLatest(USER_ADMIN.DELETE, handleDelete),\n  ]);\n}\n\nexport default watchAllUserAdminSagas;\n"]},"metadata":{},"sourceType":"module"}