{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js\";\nimport { React, Component, Layout, connect, Card, Row, Col, Modal } from \"../../global\";\nimport { List, Typography, Divider } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nimport ORDER from \"../../redux/actions/public/ordersAction\";\nimport OrderForm from \"../../components/public/order/form/OrderForm\";\nconst {\n  Footer,\n  Content\n} = Layout;\nconst data = ['Racing car sprays burning fuel into crowd.', 'Japanese princess to wed commoner.', 'Australian walks 100km after outback crash.', 'Man charged over missing wedding girl.', 'Los Angeles battles huge wildfires.'];\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createTimeToMakePizza = time => {\n      let seconds = time / 1000.0;\n      let decPart = (seconds + \"\").split(\".\")[1];\n      return decPart;\n    };\n\n    this.openPurchaseOrderCard = data => {\n      console.log('dataaaaaaaaaa', data);\n      let millisec = data.time;\n      let seconds = millisec / 1000.0;\n      console.log('seconds', seconds); //proslediti sekunde za izradu pice\n\n      let decPart = (seconds + \"\").split(\".\")[1];\n      this.setState({\n        isVisibleModal: true,\n        ingredientPizza: data,\n        pizzaName: data.name,\n        pizzaTime: decPart,\n        pizzaPrice: data.price\n      });\n    };\n\n    this.closeIngredientCard = () => {\n      this.setState({\n        isVisibleModal: false\n      });\n    };\n\n    this.state = {\n      isVisibleModal: false,\n      ingredientPizza: \"\",\n      pizzaName: \"\",\n      pizzaTime: \"\",\n      pizzaPrice: \"\"\n    };\n  }\n\n  render() {\n    if (this.props.ingredient) {\n      console.log('PROSP', this.props);\n      const {\n        isVisibleModal,\n        ingredientPizza,\n        pizzaName,\n        pizzaTime,\n        pizzaPrice\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(PublicHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Content, {\n        width: 100,\n        style: {\n          height: \"auto\",\n          textAlign: \"center\",\n          backgroundColor: \"#eeeff1\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Place the ingredients on the pizza.\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        style: {\n          padding: \"0.5rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, this.props.ingredient.data.map((data, index) => {\n        return /*#__PURE__*/React.createElement(Col, {\n          span: 6,\n          key: index,\n          type: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          title: data.name.toUpperCase(),\n          hoverable: true,\n          onClick: () => this.openPurchaseOrderCard(data),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 27\n          }\n        }, \"Price : \", data.price + \" $\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 27\n          }\n        }, \"Time to make pizza : \", this.createTimeToMakePizza(data.time) + \" min\", \" \")));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Divider, {\n        orientation: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"Orders\"), /*#__PURE__*/React.createElement(List, {\n        bordered: true,\n        dataSource: data,\n        split: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, this.props.ordersArray.map((data, index) => {\n        return /*#__PURE__*/React.createElement(List.Item, {\n          onClick: () => this.openPurchaseOrderCard(data),\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          title: data.name,\n          hoverable: true,\n          bordered: true,\n          style: {\n            width: \"20rem\",\n            margin: \"0 auto\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Typography.Text, {\n          mark: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 27\n          }\n        }, \"[Click to order]\", /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }\n        }, \"Price : \", data.price + \" $\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }\n        }, \"Time to make pizza : \", data.time + \" min\", \" \"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }\n        }, \"Ordered from : \", data.firstName + \" \" + data.lastName, \" \"))));\n      })))), /*#__PURE__*/React.createElement(Modal, {\n        style: {\n          textAlign: \"center\"\n        },\n        title: \"Pizza to order \" + pizzaName + \" | Time to make: \" + pizzaTime + \"min\" + \" | Price : \" + pizzaPrice + \"$\",\n        visible: isVisibleModal,\n        width: 550,\n        footer: false,\n        centered: true,\n        closable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(OrderForm, {\n        initalValues: ingredientPizza,\n        closeIngredientCard: this.closeIngredientCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Footer, {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, \"Design \\xA92020 Created by Nikola Mrkic\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n} // Map State To Props (Redux Store Passes State To Component)\n\n\nconst mapStateToProps = state => {\n  console.log('state 1', state);\n  const fethcSuccessIngredient = state.ingredient.success;\n  const fethcSuccessOrders = state.ordersState.success; // Redux Store --> Component\n\n  if (fethcSuccessIngredient && fethcSuccessOrders) {\n    console.log('state.ordersState', state.ordersState.data);\n    console.log('state.ingredient', state.ingredient.data);\n    return {\n      ingredient: state.ingredient,\n      ordersArray: state.ordersState\n    };\n  }\n}; // anything returned from this function will end up as props\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request()),\n    getOrders: dispatch(ORDER.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js"],"names":["React","Component","Layout","connect","Card","Row","Col","Modal","List","Typography","Divider","PublicHeader","INGREDIENT","ORDER","OrderForm","Footer","Content","data","HomePage","constructor","props","createTimeToMakePizza","time","seconds","decPart","split","openPurchaseOrderCard","console","log","millisec","setState","isVisibleModal","ingredientPizza","pizzaName","name","pizzaTime","pizzaPrice","price","closeIngredientCard","state","render","ingredient","height","textAlign","backgroundColor","padding","map","index","toUpperCase","ordersArray","width","margin","firstName","lastName","mapStateToProps","fethcSuccessIngredient","success","fethcSuccessOrders","ordersState","mapDispatchToProps","dispatch","getIngredient","request","getOrders"],"mappings":"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","sourcesContent":["import { React, Component, Layout, connect, Card, Row, Col, Modal } from \"../../global\";\nimport { List, Typography, Divider } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nimport ORDER from \"../../redux/actions/public/ordersAction\"\nimport OrderForm from \"../../components/public/order/form/OrderForm\";\n\nconst { Footer, Content } = Layout;\n\nconst data = [\n  'Racing car sprays burning fuel into crowd.',\n  'Japanese princess to wed commoner.',\n  'Australian walks 100km after outback crash.',\n  'Man charged over missing wedding girl.',\n  'Los Angeles battles huge wildfires.',\n];\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisibleModal: false,\n      ingredientPizza: \"\",\n      pizzaName: \"\",\n      pizzaTime: \"\",\n      pizzaPrice: \"\"\n    };\n  }\n\n  createTimeToMakePizza = (time) => {\n    let seconds = time / 1000.0;\n    let decPart = (seconds + \"\").split(\".\")[1];\n    return decPart\n  };\n\n\n  openPurchaseOrderCard = (data) => {\n    console.log('dataaaaaaaaaa', data);\n    let millisec = data.time;\n    let seconds = millisec / 1000.0;\n    console.log('seconds', seconds);\n    //proslediti sekunde za izradu pice\n    let decPart = (seconds + \"\").split(\".\")[1];\n\n    this.setState({\n      isVisibleModal: true,\n      ingredientPizza: data,\n      pizzaName: data.name,\n      pizzaTime: decPart,\n      pizzaPrice: data.price\n\n    })\n  };\n\n  closeIngredientCard = () => {\n    this.setState({\n      isVisibleModal: false\n    })\n\n  };\n\n  render() {\n    if (this.props.ingredient) {\n      console.log('PROSP', this.props);\n\n      const { isVisibleModal, ingredientPizza, pizzaName, pizzaTime, pizzaPrice } = this.state;\n      return (\n        <div >\n          <Layout>\n            <PublicHeader />\n            <Content\n              width={100}\n              style={{\n                height: \"auto\",\n                textAlign: \"center\",\n                backgroundColor: \"#eeeff1\",\n              }}\n            >\n              <Card title=\"Place the ingredients on the pizza.\" size=\"small\" >\n                <Row style={{\n                  padding: \"0.5rem\",\n\n                }}>\n                  {this.props.ingredient.data.map((data, index) => {\n                    return (\n                      <Col span={6} key={index} type=\"primary\" >\n                        <Card title={data.name.toUpperCase()} hoverable={true} onClick={() => this.openPurchaseOrderCard(data)} >\n                          <p>Price : {data.price + \" $\"}</p>\n                          <p>Time to make pizza : {this.createTimeToMakePizza(data.time) + \" min\"} </p>\n                        </Card>\n                      </Col>\n                    );\n                  })}\n                </Row>\n              </Card>\n\n              <div>\n                <Divider orientation=\"center\">Orders</Divider>\n                <List\n                  bordered\n                  dataSource={data}\n                  split>\n                  {this.props.ordersArray.map((data, index) => {\n                    return (\n                      <List.Item onClick={() => this.openPurchaseOrderCard(data)} key={index} >\n                        <Card small title={data.name} hoverable={true} bordered style={{ width: \"20rem\", margin: \"0 auto\" }}>\n                          <Typography.Text mark >\n                            [Click to order]\n                            <p>Price : {data.price + \" $\"}</p>\n                            <p>Time to make pizza : {data.time + \" min\"} </p>\n                            <p>Ordered from : {data.firstName + \" \" + data.lastName} </p>\n                          </Typography.Text>\n                        </Card>\n                      </List.Item>\n                    );\n                  })}\n\n                </List>\n              </div>\n            </Content>\n\n            <Modal\n              style={{\n                textAlign: \"center\",\n              }}\n              title={\"Pizza to order \" + pizzaName + \" | Time to make: \" + pizzaTime + \"min\" + \" | Price : \" + pizzaPrice + \"$\"}\n              visible={isVisibleModal}\n              width={550}\n              footer={false}\n              centered={true}\n              closable={false}\n            >\n              <OrderForm initalValues={ingredientPizza} closeIngredientCard={this.closeIngredientCard} />\n            </Modal>\n\n            <Footer style={{ textAlign: \"center\" }}>\n              Design ©2020 Created by Nikola Mrkic\n            </Footer>\n          </Layout>\n        </div>\n      );\n    } else {\n      return (\n        <div></div>\n      )\n    }\n\n  }\n}\n\n// Map State To Props (Redux Store Passes State To Component)\nconst mapStateToProps = (state) => {\n  console.log('state 1', state);\n  const fethcSuccessIngredient = state.ingredient.success;\n  const fethcSuccessOrders = state.ordersState.success;\n  // Redux Store --> Component\n  if (fethcSuccessIngredient && fethcSuccessOrders) {\n    console.log('state.ordersState', state.ordersState.data);\n    console.log('state.ingredient', state.ingredient.data);\n\n    return {\n      ingredient: state.ingredient,\n      ordersArray: state.ordersState\n    };\n  }\n};\n\n// anything returned from this function will end up as props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request()),\n    getOrders: dispatch(ORDER.request()),\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);"]},"metadata":{},"sourceType":"module"}