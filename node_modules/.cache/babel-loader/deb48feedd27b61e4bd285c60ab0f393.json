{"ast":null,"code":"import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { orderAction } from \"../../actions/public/ordersAction\";\nimport { ORDER } from \"../../actions/public/ordersAction/ordersActionTypes\";\n\nfunction* handleGetOrders() {\n  try {\n    const {\n      data\n    } = yield call(DataUtils.get, `/orders`);\n    yield put(orderAction.success({\n      data\n    }));\n  } catch (e) {\n    yield put(orderAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nfunction* handlePostOrder(action) {\n  const order = action.payload;\n\n  try {\n    const response = yield call(DataUtils.post, `/create-order`, order);\n    const orderResponse = response.data.order;\n    yield put(orderAction.recive({\n      orderResponse\n    }));\n  } catch (e) {\n    yield put(orderAction.failure({\n      error: { ...e\n      }\n    }));\n  }\n}\n\nexport function* watchAllOrdersSagas() {\n  yield all([takeLatest(ORDER.GET, handleGetOrders), takeLatest(ORDER.SAVE, handlePostOrder)]);\n}\nexport default watchAllOrdersSagas;","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/redux/sagas/public/orderSaga.js"],"names":["put","call","takeLatest","all","DataUtils","orderAction","ORDER","handleGetOrders","data","get","success","e","failure","error","handlePostOrder","action","order","payload","response","post","orderResponse","recive","watchAllOrdersSagas","GET","SAVE"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,KAAT,QAAsB,qDAAtB;;AAEA,UAAUC,eAAV,GAA4B;AACxB,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACG,SAAS,CAACK,GAAX,EAAiB,SAAjB,CAA3B;AACA,UAAMT,GAAG,CAACK,WAAW,CAACK,OAAZ,CAAoB;AAAEF,MAAAA;AAAF,KAApB,CAAD,CAAT;AACH,GAHD,CAGE,OAAOG,CAAP,EAAU;AACR,UAAMX,GAAG,CAACK,WAAW,CAACO,OAAZ,CAAoB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAApB,CAAD,CAAT;AACH;AACJ;;AAED,UAAUG,eAAV,CAA0BC,MAA1B,EAAkC;AAC9B,QAAMC,KAAK,GAAGD,MAAM,CAACE,OAArB;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMjB,IAAI,CAACG,SAAS,CAACe,IAAX,EAAkB,eAAlB,EAAkCH,KAAlC,CAA3B;AACA,UAAMI,aAAa,GAAGF,QAAQ,CAACV,IAAT,CAAcQ,KAApC;AACA,UAAMhB,GAAG,CAACK,WAAW,CAACgB,MAAZ,CAAmB;AAAED,MAAAA;AAAF,KAAnB,CAAD,CAAT;AACH,GAJD,CAIE,OAAOT,CAAP,EAAU;AACR,UAAMX,GAAG,CAACK,WAAW,CAACO,OAAZ,CAAoB;AAAEC,MAAAA,KAAK,EAAE,EAAE,GAAGF;AAAL;AAAT,KAApB,CAAD,CAAT;AACH;AACJ;;AAED,OAAO,UAAUW,mBAAV,GAAgC;AACnC,QAAMnB,GAAG,CAAC,CACND,UAAU,CAACI,KAAK,CAACiB,GAAP,EAAYhB,eAAZ,CADJ,EAENL,UAAU,CAACI,KAAK,CAACkB,IAAP,EAAaV,eAAb,CAFJ,CAAD,CAAT;AAIH;AAED,eAAeQ,mBAAf","sourcesContent":["import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport DataUtils from \"../../../DataUtils\";\nimport { orderAction } from \"../../actions/public/ordersAction\";\nimport { ORDER } from \"../../actions/public/ordersAction/ordersActionTypes\";\n\nfunction* handleGetOrders() {\n    try {\n        const { data } = yield call(DataUtils.get, `/orders`);\n        yield put(orderAction.success({ data }));\n    } catch (e) {\n        yield put(orderAction.failure({ error: { ...e } }));\n    }\n}\n\nfunction* handlePostOrder(action) {\n    const order = action.payload;\n    try {\n        const response = yield call(DataUtils.post, `/create-order`, order);\n        const orderResponse = response.data.order;\n        yield put(orderAction.recive({ orderResponse }));\n    } catch (e) {\n        yield put(orderAction.failure({ error: { ...e } }));\n    }\n}\n\nexport function* watchAllOrdersSagas() {\n    yield all([\n        takeLatest(ORDER.GET, handleGetOrders),\n        takeLatest(ORDER.SAVE, handlePostOrder)],\n    );\n}\n\nexport default watchAllOrdersSagas;\n"]},"metadata":{},"sourceType":"module"}