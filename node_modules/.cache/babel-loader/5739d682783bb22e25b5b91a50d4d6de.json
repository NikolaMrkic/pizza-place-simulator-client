{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/components/public/login/LogIn.js\";\nimport { React, Field, Form, Input, Button, Link, useHistory, useLocation, UserOutlined, LockOutlined } from \"../../../global\";\n\nconst LogIn = () => {\n  let location = useLocation();\n  let {\n    admin\n  } = location.state || {\n    admin: {\n      pathname: \"/admin\"\n    }\n  };\n  let history = useHistory();\n\n  let login = () => {\n    history.replace(admin);\n  };\n\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Login to \", admin.pathname, \" page\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: LogIn(onSubmitForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    label: \"First Name\",\n    name: \"firstName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter first name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter last name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Address\",\n    name: \"address\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    label: \"Phone\",\n    name: \"phone\",\n    component: renderInput,\n    type: \"text\",\n    placeholder: \"Enter phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Order\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Close Order\")))));\n}; // Important: connect only after calling reduxForm!!!\n\n\nexport default LogIn;\nLogIn = reduxForm({\n  form: \"LogIn\"\n})(LogIn);","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/components/public/login/LogIn.js"],"names":["React","Field","Form","Input","Button","Link","useHistory","useLocation","UserOutlined","LockOutlined","LogIn","location","admin","state","pathname","history","login","replace","onFinish","values","console","log","onSubmitForm","renderInput","textAlign","reduxForm","form"],"mappings":";AAAA,SACEA,KADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,IANF,EAOEC,UAPF,EAQEC,WARF,EASEC,YATF,EAUEC,YAVF,QAWO,iBAXP;;AAaA,MAAMC,KAAK,GAAG,MAAM;AAElB,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AACA,MAAI;AAAEK,IAAAA;AAAF,MAAYD,QAAQ,CAACE,KAAT,IAAkB;AAAED,IAAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ;AAAT,GAAlC;AAEA,MAAIC,OAAO,GAAGT,UAAU,EAAxB;;AACA,MAAIU,KAAK,GAAG,MAAM;AAChBD,IAAAA,OAAO,CAACE,OAAR,CAAgBL,KAAhB;AACD,GAFD;;AAIA,QAAMM,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaP,KAAK,CAACE,QAAnB,UADF,eAEE;AAAM,IAAA,QAAQ,EAAEJ,KAAK,CAACY,YAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,SAAS,EAAEC,WAHb;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,kBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,SAAS,EAAEA,WAHb;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,iBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAeE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,SAAS,EAAEA,WAHb;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,eALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAsBE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAEA,WAHb;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF,CAFF,eAkCE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAER,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAlCF,CADF,CAFF,CADF;AAkDD,CAhED,C,CAiEA;;;AAEA,eAAeN,KAAf;AACAA,KAAK,GAAGe,SAAS,CAAC;AAChBC,EAAAA,IAAI,EAAE;AADU,CAAD,CAAT,CAELhB,KAFK,CAAR","sourcesContent":["import {\n  React,\n  Field,\n  Form,\n  Input,\n  Button,\n  Link,\n  useHistory,\n  useLocation,\n  UserOutlined,\n  LockOutlined,\n} from \"../../../global\";\n\nconst LogIn = () => {\n\n  let location = useLocation();\n  let { admin } = location.state || { admin: { pathname: \"/admin\" } };\n\n  let history = useHistory();\n  let login = () => {\n    history.replace(admin);\n  };\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  return (\n    <div>\n      <p>Login to {admin.pathname} page</p>\n      <form onSubmit={LogIn(onSubmitForm)}>\n        <div>\n\n          <div>\n            <div>\n              <Field\n                label=\"First Name\"\n                name=\"firstName\"\n                component={renderInput}\n                type=\"text\"\n                placeholder=\"Enter first name\"\n              />\n              <Field\n                label=\"Last Name\"\n                name=\"lastName\"\n                component={renderInput}\n                type=\"text\"\n                placeholder=\"Enter last name\"\n              />\n              <Field\n                label=\"Address\"\n                name=\"address\"\n                component={renderInput}\n                type=\"text\"\n                placeholder=\"Enter address\"\n              />\n              <Field\n                label=\"Phone\"\n                name=\"phone\"\n                component={renderInput}\n                type=\"text\"\n                placeholder=\"Enter phone\"\n              />\n            </div>\n          </div>\n          <div style={{ textAlign: \"center\" }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Order\n                         </Button>\n            <Button type=\"button\" onClick={login}>\n              Close Order\n                         </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n// Important: connect only after calling reduxForm!!!\n\nexport default LogIn;\nLogIn = reduxForm({\n  form: \"LogIn\",\n})(LogIn);\n\n"]},"metadata":{},"sourceType":"module"}