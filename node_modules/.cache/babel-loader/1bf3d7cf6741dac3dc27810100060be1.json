{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/CutApp/hairdressing-front-managment/src/components/admin-components/tables/UsersTable.js\";\nimport { React, useState, Table, Modal, Button } from \"../../../global\";\nimport UserForm from \"../forms/User/UserForm\";\nimport USER_ADMIN from \"../../../redux/actions/admin/userAction\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst UsersTable = () => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [isDataForEdit, setDataForEdit] = useState(false);\n  const [userTitleForm, setUserTitle] = useState(\"Add User\");\n  const [useUser, setUser] = useState(\"\");\n  const users = useSelector(state => state.adminUsers.users);\n  console.log(\"USERI NA TABLEI\", users);\n  const dispatch = useDispatch();\n  useEffect(() => {// dispatch(USER_ADMIN.request());\n  }, []);\n  console.log(\"users\", users);\n  const dataSource = users.map((user, index) => ({\n    key: index,\n    userId: user.userId,\n    firstName: user.firstName,\n    lastName: user.lastName,\n    userName: user.userName,\n    email: user.email,\n    phone: user.phone,\n    address: user.address,\n    delete: user.delete\n  }));\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"userId\",\n    key: \"userId\"\n  }, {\n    title: \"Ime\",\n    dataIndex: \"firstName\",\n    key: \"firstName\"\n  }, {\n    title: \"Prezime\",\n    dataIndex: \"lastName\",\n    key: \"lastName\"\n  }, {\n    title: \"Korisnicko ime\",\n    dataIndex: \"userName\",\n    key: \"userName\"\n  }, {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\"\n  }, {\n    title: \"Telefon\",\n    dataIndex: \"phone\",\n    key: \"phone\"\n  }, {\n    title: \"Uredi\",\n    dataIndex: \"Edit\",\n    key: \"Edit\",\n    render: (text, data) => /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => handlerForEdit(data),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Edit\")\n  }, {\n    title: \"Obrisi\",\n    dataIndex: \"Delete\",\n    key: \"Delete\",\n    render: () => /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      danger: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Delete\")\n  }];\n\n  const handlerForEdit = userForEdit => {\n    setUserTitle(\"Edit User : \" + userForEdit.firstName + \" \" + userForEdit.lastName);\n    setIsVisibleModal(true);\n    setDataForEdit(true);\n    setUser(userForEdit);\n  };\n\n  const resetForm = () => {\n    dispatch(USER_ADMIN.request());\n    setIsVisibleModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    pagination: {\n      pageSize: 10\n    },\n    dataSource: dataSource,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    title: userTitleForm,\n    visible: isVisibleModal,\n    onCancel: resetForm,\n    width: 1300,\n    footer: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserForm, {\n    initialValues: useUser,\n    editableForm: isDataForEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default UsersTable;","map":{"version":3,"sources":["/home/nikola/projekti/CutApp/hairdressing-front-managment/src/components/admin-components/tables/UsersTable.js"],"names":["React","useState","Table","Modal","Button","UserForm","USER_ADMIN","useEffect","useSelector","useDispatch","UsersTable","isVisibleModal","setIsVisibleModal","isDataForEdit","setDataForEdit","userTitleForm","setUserTitle","useUser","setUser","users","state","adminUsers","console","log","dispatch","dataSource","map","user","index","key","userId","firstName","lastName","userName","email","phone","address","delete","columns","title","dataIndex","render","text","data","handlerForEdit","userForEdit","resetForm","request","pageSize"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAsD,iBAAtD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACY,aAAD,EAAgBC,cAAhB,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACc,aAAD,EAAgBC,YAAhB,IAAgCf,QAAQ,CAAC,UAAD,CAA9C;AAEA,QAAM,CAACgB,OAAD,EAAUC,OAAV,IAAqBjB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAMkB,KAAK,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBF,KAA7B,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,KAA/B;AACA,QAAMK,QAAQ,GAAGf,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAe,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AAEA,QAAMM,UAAU,GAAGN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,MAAkB;AAC7CC,IAAAA,GAAG,EAAED,KADwC;AAE7CE,IAAAA,MAAM,EAAEH,IAAI,CAACG,MAFgC;AAG7CC,IAAAA,SAAS,EAAEJ,IAAI,CAACI,SAH6B;AAI7CC,IAAAA,QAAQ,EAAEL,IAAI,CAACK,QAJ8B;AAK7CC,IAAAA,QAAQ,EAAEN,IAAI,CAACM,QAL8B;AAM7CC,IAAAA,KAAK,EAAEP,IAAI,CAACO,KANiC;AAO7CC,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAPiC;AAQ7CC,IAAAA,OAAO,EAAET,IAAI,CAACS,OAR+B;AAS7CC,IAAAA,MAAM,EAAEV,IAAI,CAACU;AATgC,GAAlB,CAAV,CAAnB;AAYA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,IADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEX,IAAAA,GAAG,EAAE;AAHP,GADc,EAMd;AACEU,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,WAFb;AAGEX,IAAAA,GAAG,EAAE;AAHP,GANc,EAWd;AACEU,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEX,IAAAA,GAAG,EAAE;AAHP,GAXc,EAgBd;AACEU,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEX,IAAAA,GAAG,EAAE;AAHP,GAhBc,EAqBd;AACEU,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEX,IAAAA,GAAG,EAAE;AAHP,GArBc,EA0Bd;AACEU,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEX,IAAAA,GAAG,EAAE;AAHP,GA1Bc,EA+Bd;AACEU,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEX,IAAAA,GAAG,EAAE,MAHP;AAIEY,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,IAAP,kBACN,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,MAAMC,cAAc,CAACD,IAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,GA/Bc,EAyCd;AACEJ,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEX,IAAAA,GAAG,EAAE,QAHP;AAIEY,IAAAA,MAAM,EAAE,mBACN,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,MAAM,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,GAzCc,CAAhB;;AAqDA,QAAMG,cAAc,GAAIC,WAAD,IAAiB;AACtC7B,IAAAA,YAAY,CACV,iBAAiB6B,WAAW,CAACd,SAA7B,GAAyC,GAAzC,GAA+Cc,WAAW,CAACb,QADjD,CAAZ;AAGApB,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAI,IAAAA,OAAO,CAAC2B,WAAD,CAAP;AACD,GAPD;;AASA,QAAMC,SAAS,GAAG,MAAM;AACtBtB,IAAAA,QAAQ,CAAClB,UAAU,CAACyC,OAAX,EAAD,CAAR;AACAnC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,UAAU,EAAE;AAAEoC,MAAAA,QAAQ,EAAE;AAAZ,KADd;AAEE,IAAA,UAAU,EAAEvB,UAFd;AAGE,IAAA,OAAO,EAAEa,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEvB,aADT;AAEE,IAAA,OAAO,EAAEJ,cAFX;AAGE,IAAA,QAAQ,EAAEmC,SAHZ;AAIE,IAAA,KAAK,EAAE,IAJT;AAKE,IAAA,MAAM,EAAE,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,aAAa,EAAE7B,OAAzB;AAAkC,IAAA,YAAY,EAAEJ,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CANF,CADF;AAkBD,CAjHD;;AAmHA,eAAeH,UAAf","sourcesContent":["import { React, useState, Table, Modal, Button } from \"../../../global\";\nimport UserForm from \"../forms/User/UserForm\";\nimport USER_ADMIN from \"../../../redux/actions/admin/userAction\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst UsersTable = () => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [isDataForEdit, setDataForEdit] = useState(false);\n  const [userTitleForm, setUserTitle] = useState(\"Add User\");\n\n  const [useUser, setUser] = useState(\"\");\n  const users = useSelector((state) => state.adminUsers.users);\n  console.log(\"USERI NA TABLEI\", users);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // dispatch(USER_ADMIN.request());\n  }, []);\n\n  console.log(\"users\", users);\n\n  const dataSource = users.map((user, index) => ({\n    key: index,\n    userId: user.userId,\n    firstName: user.firstName,\n    lastName: user.lastName,\n    userName: user.userName,\n    email: user.email,\n    phone: user.phone,\n    address: user.address,\n    delete: user.delete,\n  }));\n\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"userId\",\n      key: \"userId\",\n    },\n    {\n      title: \"Ime\",\n      dataIndex: \"firstName\",\n      key: \"firstName\",\n    },\n    {\n      title: \"Prezime\",\n      dataIndex: \"lastName\",\n      key: \"lastName\",\n    },\n    {\n      title: \"Korisnicko ime\",\n      dataIndex: \"userName\",\n      key: \"userName\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"Telefon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n    },\n    {\n      title: \"Uredi\",\n      dataIndex: \"Edit\",\n      key: \"Edit\",\n      render: (text, data) => (\n        <Button type=\"primary\" onClick={() => handlerForEdit(data)}>\n          Edit\n        </Button>\n      ),\n    },\n    {\n      title: \"Obrisi\",\n      dataIndex: \"Delete\",\n      key: \"Delete\",\n      render: () => (\n        <Button type=\"primary\" danger>\n          Delete\n        </Button>\n      ),\n    },\n  ];\n\n  const handlerForEdit = (userForEdit) => {\n    setUserTitle(\n      \"Edit User : \" + userForEdit.firstName + \" \" + userForEdit.lastName\n    );\n    setIsVisibleModal(true);\n    setDataForEdit(true);\n    setUser(userForEdit);\n  };\n\n  const resetForm = () => {\n    dispatch(USER_ADMIN.request());\n    setIsVisibleModal(false);\n  };\n\n  return (\n    <div>\n      <Table\n        pagination={{ pageSize: 10 }}\n        dataSource={dataSource}\n        columns={columns}\n      />\n      <Modal\n        title={userTitleForm}\n        visible={isVisibleModal}\n        onCancel={resetForm}\n        width={1300}\n        footer={false}\n      >\n        <UserForm initialValues={useUser} editableForm={isDataForEdit} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default UsersTable;\n"]},"metadata":{},"sourceType":"module"}