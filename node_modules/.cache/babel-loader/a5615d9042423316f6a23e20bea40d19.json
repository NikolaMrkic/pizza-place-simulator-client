{"ast":null,"code":"var _jsxFileName = \"/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js\";\nimport { React, Component, Layout, connect } from \"../../global\";\nimport { Space, Card, Row, Col, Steps, Button, message } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nconst {\n  Footer,\n  Content\n} = Layout;\nconst {\n  Step\n} = Steps;\nconst {\n  Meta\n} = Card;\nconst steps = [{\n  title: 'First',\n  content: 'First'\n}, {\n  title: 'Second',\n  content: 'Second-content'\n}, {\n  title: 'Last',\n  content: 'Last-content'\n}];\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openIngredientCard = data => {\n      console.log('dataaaaaaaaaa', data);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.ingredient) {\n      const {\n        current,\n        setCurrent\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(PublicHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Content, {\n        width: 1300,\n        style: {\n          height: \"830px\",\n          textAlign: \"center\",\n          backgroundColor: \"#eeeff1\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: \"Place the ingredients on the pizza.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, this.props.ingredient.map((data, index) => {\n        return /*#__PURE__*/React.createElement(Col, {\n          span: 6,\n          key: index,\n          type: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          title: data.name,\n          hoverable: true,\n          handleClick: () => this.openIngredientCard(data),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }\n        }, \"Price : \", data.price), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }\n        }, \"Time to make pizza : \", data.time))));\n      })))), /*#__PURE__*/React.createElement(Footer, {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"Design \\xA92020 Created by Nikola Mrkic\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      });\n    }\n  }\n\n} // Map State To Props (Redux Store Passes State To Component)\n\n\nconst mapStateToProps = state => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success; // Redux Store --> Component\n\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data\n    };\n  }\n}; // anything returned from this function will end up as props\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/nikola/projekti/Spartans AI task zadatak/pizza-place-simulator-client/src/pages/public/HomePage.js"],"names":["React","Component","Layout","connect","Space","Card","Row","Col","Steps","Button","message","PublicHeader","INGREDIENT","Footer","Content","Step","Meta","steps","title","content","HomePage","constructor","props","openIngredientCard","data","console","log","state","render","ingredient","current","setCurrent","height","textAlign","backgroundColor","map","index","name","price","time","mapStateToProps","fethcSuccess","success","mapDispatchToProps","dispatch","getIngredient","request"],"mappings":"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","sourcesContent":["import { React, Component, Layout, connect } from \"../../global\";\nimport { Space, Card, Row, Col, Steps, Button, message } from 'antd';\nimport PublicHeader from \"../../components/public/header/PublicHeader\";\nimport INGREDIENT from \"../../redux/actions/public/ingredientAction\";\nconst { Footer, Content } = Layout;\nconst { Step } = Steps;\nconst { Meta } = Card;\nconst steps = [\n  {\n    title: 'First',\n    content: 'First',\n  },\n  {\n    title: 'Second',\n    content: 'Second-content',\n  },\n  {\n    title: 'Last',\n    content: 'Last-content',\n  },\n];\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n  }\n\n\n  openIngredientCard = (data) => {\n    console.log('dataaaaaaaaaa', data);\n  };\n\n\n  render() {\n    if (this.props.ingredient) {\n      const { current, setCurrent } = this.state;\n      return (\n        <div >\n          <Layout>\n            <PublicHeader />\n            <Content\n              width={1300}\n              style={{\n                height: \"830px\",\n                textAlign: \"center\",\n                backgroundColor: \"#eeeff1\",\n              }}\n            >\n              <Card title=\"Place the ingredients on the pizza.\"  >\n                <Row>\n                  {this.props.ingredient.map((data, index) => {\n\n                    return (\n\n                      <Col span={6} key={index} type=\"primary\" >\n                        <Button>\n                          <Card title={data.name} hoverable={true} handleClick={() => this.openIngredientCard(data)}>\n                            <p>Price : {data.price}</p>\n                            <p>Time to make pizza : {data.time}</p>\n                          </Card>\n                        </Button>\n                      </Col>\n\n                    );\n\n                  })}\n                </Row>\n              </Card>\n\n\n            </Content>\n            <Footer style={{ textAlign: \"center\" }}>\n              Design ©2020 Created by Nikola Mrkic\n            </Footer>\n          </Layout>\n        </div>\n      );\n    } else {\n      return (<div>\n      </div>)\n    }\n\n  }\n}\n\n// Map State To Props (Redux Store Passes State To Component)\nconst mapStateToProps = (state) => {\n  console.log('state 1', state);\n  const fethcSuccess = state.ingredient.success;\n  // Redux Store --> Component\n  if (fethcSuccess) {\n    const ingredient = state;\n    return {\n      ingredient: ingredient.ingredient.data,\n    };\n  }\n};\n\n// anything returned from this function will end up as props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getIngredient: dispatch(INGREDIENT.request())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);"]},"metadata":{},"sourceType":"module"}