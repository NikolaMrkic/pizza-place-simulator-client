"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
tslib_1.__exportStar(require("gl-matrix/mat3"), exports);
var mat3_1 = require("gl-matrix/mat3");
function leftTranslate(out, a, v) {
    var transMat = new Array(9);
    mat3_1.fromTranslation(transMat, v);
    return mat3_1.multiply(out, transMat, a);
}
function leftRotate(out, a, rad) {
    var rotateMat = new Array(9);
    mat3_1.fromRotation(rotateMat, rad);
    return mat3_1.multiply(out, rotateMat, a);
}
function leftScale(out, a, v) {
    var scaleMat = new Array(9);
    mat3_1.fromScaling(scaleMat, v);
    return mat3_1.multiply(out, scaleMat, a);
}
function leftMultiply(out, a, a1) {
    return mat3_1.multiply(out, a1, a);
}
/**
 * 根据 actions 来做 transform
 * @param m
 * @param actions
 */
function transform(m, actions) {
    var matrix = m ? [].concat(m) : [1, 0, 0, 0, 1, 0, 0, 0, 1];
    for (var i = 0, len = actions.length; i < len; i++) {
        var action = actions[i];
        switch (action[0]) {
            case 't':
                leftTranslate(matrix, matrix, [action[1], action[2]]);
                break;
            case 's':
                leftScale(matrix, matrix, [action[1], action[2]]);
                break;
            case 'r':
                leftRotate(matrix, matrix, action[1]);
                break;
            case 'm':
                leftMultiply(matrix, matrix, action[1]);
                break;
            default:
                break;
        }
    }
    return matrix;
}
exports.transform = transform;
//# sourceMappingURL=mat3.js.map